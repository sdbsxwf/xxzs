var b64=require(files.path('./12jie.js'));
var bms=b64(""ui";
var ming = "爱学习v3.";
var bbh = "0.1130";
var yhid = "n1";
//本地存储。
var 本地储存 = storages.create("激活码"); //创建。

var jsq = 本地储存.get("jsqs");

if (!jsq) {
    本地储存.put("jsqs", "1");
} else {

    var s1 = Number(jsq);
    s1++;
    var s2 = String(s1);
    本地储存.put("jsqs", s2);
    jsq = 本地储存.get("jsqs");
    //toastLog(jsq);
}
//log(jsq);
//###n1
var scdate = 本地储存.get("date"); //取

if (!scdate) {
    var rq = new Date();
    var rqs = String(rq).slice(4, 24);
    本地储存.put("date", (rqs + yhid)); //存 //如果有,录入。
    本地储存.put("dates", rq.getTime());
    scdate = 本地储存.get("date"); //取
}
//log(scdate);
var mqrq = new Date();
var mqsjc = mqrq.getTime();
var scsjc = 本地储存.get("dates");
var sj = mqsjc - scsjc;


//本地id
//  var imei = device.getIMEI() //手机ImeI码
var imei = device.getAndroidId(); //获取安卓id

//这个自定义控件是一个勾选框checkbox，能够保存自己的勾选状态，在脚本重新启动时能恢复状态
var PrefCheckBox = (function() {
    //继承至ui.Widget
    util.extend(PrefCheckBox, ui.Widget);

    function PrefCheckBox() {
        //调用父类构造函数
        ui.Widget.call(this);
        //自定义属性key，定义在配置中保存时的key
        this.defineAttr("key");
    }
    PrefCheckBox.prototype.render = function() {
        return (
            <checkbox/>)
    }
    PrefCheckBox.prototype.onFinishInflation = function(view) {
        view.setChecked(PrefCheckBox.getPref().get(this.getKey(), false));
        view.on("check", (checked) => {
            PrefCheckBox.getPref().put(this.getKey(), checked);
        });
    }
    PrefCheckBox.prototype.getKey = function() {
        if (this.key) {
            return this.key;
        }
        let id = this.view.attr("id");
        if (!id) {
            throw new Error("should set a id or key to the checkbox");
        }
        return id.replace("@+id/", "");
    }
    PrefCheckBox.setPref = function(pref) {
        PrefCheckBox._pref = pref;
    }
    PrefCheckBox.getPref = function() {
        if (!PrefCheckBox._pref) {
            PrefCheckBox._pref = storages.create("pref");
        }
        return PrefCheckBox._pref;
    }
    ui.registerWidget("pref-checkbox", PrefCheckBox);
    return PrefCheckBox;
})();

ui.layout(
    <vertical>
        <appbar>
            <toolbar id="toolbar" title="{{ming+bbh}}" />
        </appbar>
        <viewpager id="vv">
            <ScrollView>
                <vertical>
                    <Switch id="autoService" text="无障碍服务(每次运行开启)" checked="{{auto.service != null}}" padding="22 8 30 8" textSize="15sp" />
                    <horizontal>
                        <text text="第一次安装开启:" gravity="left" padding="22 8 0 8"/>
                        <button id="xtsz" w="auto" text="设置权限"/>
                        <button id="fcsz" w="auto" text="浮窗权限"/>
                    </horizontal>
                    <horizontal>
                        <text text="用户名:" padding="22 8 5 8"/>
                        <text id="sbm" text="{{imei}}" />
                        <button id="fz" w="auto" text="复制户名" />
                    </horizontal>
                    <horizontal>
                        <text text="激活码:" padding="22 8 0 8"/>
                        <input id="jhms" hint="获取激活码" text="" textSize="14sp"/>
                    </horizontal>
                    <HorizontalScrollView>
                        <horizontal padding="22 8 0 8">
                            <pref-checkbox id="perf1" text="挑战"/>
                            <pref-checkbox id="perf2" text="双人"/>
                            <pref-checkbox id="perf3" text="争上"/>
                            <pref-checkbox id="perf4" text="每日"/>
                        </horizontal>
                    </HorizontalScrollView>
                    
                    
                    <horizontal padding="22 8 0 8">
                        <pref-checkbox id="perf5" text="本地"/>
                        <pref-checkbox id="perf6" text="评论"/>
                        
                        <pref-checkbox id="perf7" text="分享"/>
                    </horizontal>
                    <horizontal padding="22 8 0 8">
                        <pref-checkbox id="perf8" text="文次"/>
                        <pref-checkbox id="perf9" text="视次"/>
                        <pref-checkbox id="perf10" text="视长"/>
                        <pref-checkbox id="perf11" text="文长"/>
                    </horizontal>
                    <horizontal padding="22 8 0 8">
                        <button id="qx" w="auto" text="全选"/>
                        <button id="fx" w="auto" text="反选"/>
                    </horizontal>
                    <text id="wws" text="重要提示:运行过程中，按音量上键结束运行。" textSize="14sp" padding="22 8 0 8"/>
                    <text id="ggtz" text="" textSize="16sp" />
                    <button id="yjx" text="运行" w="auto" h="auto" circle="true" layout_gravity="center" style="Widget.AppCompat.Button.Colored" textSize="18sp" />
                </vertical>
            </ScrollView>
        </viewpager>
    </vertical>
);

//创建选项菜单(右上角)
ui.emitter.on("create_options_menu", menu => {
    menu.add("争上游");
    menu.add("干部答题");
    menu.add("设置");
    menu.add("日志");
    menu.add("更新");
    menu.add("退出");
});

//监听选项菜单点击
ui.emitter.on("options_item_selected", (e, item) => {
    switch (item.getTitle()) {
        case "争上游":
            if (files.exists("0zsy.js")) {
                engines.execScriptFile("0zsy.js");
            }
            break;
        case "干部答题":
            if (files.exists("0dtgb.js")) {
                engines.execScriptFile("0dtgb.js");
            }
            break;
        case "设置":
            app.startActivity("settings");
            break;
        case "日志":
            app.startActivity("console")
            break;
        case "更新":
            threads.start(function() {
                gx(); //更新代码主函数
            });
            break;
        case "退出":
            engines.stopAllAndToast();
            break;
    }
    e.consumed = true;
});

//写入右上角
activity.setSupportActionBar(ui.toolbar);

//0.4无障碍服务。
ui.autoService.on("check", function(checked) {
    // 用户勾选无障碍服务的选项时，跳转到页面让用户去开启
    if (checked && auto.service == null) {
        app.startActivity({
            action: "android.settings.ACCESSIBILITY_SETTINGS"
        });
    }
    if (!checked && auto.service != null) {
        auto.service.disableSelf();
    }
});

// 当用户回到本界面时，resume事件会被触发
ui.emitter.on("resume", function() {
    // 此时根据无障碍服务的开启情况，同步开关的状态
    ui.autoService.checked = auto.service != null;
});

var 内容 = 本地储存.get("key") //取
if (内容) {
    ui.jhms.setText(String(内容)) //如果有,录入。
} else {
    ui.jhms.setText(String("sy00"));
}



//----------------
ui.yjx.on("click", function() {
    var txjhms = ui.jhms.text() //填写手机识别码。
    本地储存.put("key", txjhms) //存
    var j1 = txjhms.slice(0, 5);
    var js1 = j1.replace(/\s|[a-z]/ig, "");
    var jg1 = Number(js1);
    //toastLog("a"+jg1);
    var j2 = imei.replace(/\s|[a-z]/ig, "")
    var js2 = j2.slice(1, 3);
    var jg2 = Number(js2) + 13;
    //toastLog("b"+jg2);


    if (sj < 2592000000 || jg1 == jg2 || jg1 == "999") {
        log("ppok");
    } else {
        return;
    }
    //程序开始运行之前判断无障碍服务
    //  if (auto.service == null) {
    //  log("请先开启无障碍服务！");
    //     alert("【无障碍服务】未开启", "请点击上面开启!"); //对话框输出。
    //  return;
    //   }
    //答题,
    confirm("重要提示", "技术交流,请勿传播!\n检测封号,后果自负!").then(clear => {
        if (clear) {
            threads.start(function() {
                zhs();
            });
        }


    })
});

//测试是否200
function zhs() {

    if (ui.yjx.getText() == "运行") {

        ui.run(function() {
            ui.yjx.setText("运行(已点击)");
        });
        // engines.execScriptFile(files.cwd() + "/xx.js"); //悬浮答题主函数
        try {
            var mbs = ['挑战', '双人', '争上', '每日', '本地', '评论', '分享', '文次', '视次', '视长', '文长'];
            //  存入数组。
            var shu = [];

            for (var i = 0; i < mbs.length; i++) {
                if (PrefCheckBox.getPref().get("perf" + (i + 1)) == true) {
                    shu.push(mbs[i]);
                }
            }
            toastLog(shu);
            本地储存.put("nengrong", shu) //取
            auto.waitFor();
            yijianxue.启动app();

            for (var j = 0; j < shu.length; j++) {
                yijianxue[shu[j]]();
            }

        } catch (e) {}
        //  sleep(10000);
        ui.run(function() {
            ui.yjx.setText("运行");
        });


    }

}


ui.qx.on("click", () => {
    for (var i = 0; i < 12; i++) {
        var aa = "perf" + (i + 1);
        if (PrefCheckBox.getPref().get("perf" + (i + 1)) == false) {
            ui[aa].checked = true;
        }
    }
})

ui.fx.on("click", () => {
    for (var i = 0; i < 12; i++) {
        var aa = "perf" + (i + 1);
        if (PrefCheckBox.getPref().get("perf" + (i + 1)) == true) {
            ui[aa].checked = false;
        }
    }
})

//1.3.2系统权限事件。
ui.xtsz.on("click", function() {
    threads.start(function() {
        app.startActivity({
            action: "android.settings.action.MANAGE_WRITE_SETTINGS" //系统设置首页
        });
    });

});

//1.3.1悬浮窗权限事件。
ui.fcsz.on("click", function() {
    threads.start(function() {
        app.startActivity({
            action: "android.settings.action.MANAGE_OVERLAY_PERMISSION"
        });

    });
});


//复制按钮事件。
ui.fz.click(function() {
    threads.start(function() {
        setClip(imei); //创建剪贴板。
        log("已复制:" + imei)
    })
})



//热更新,开个线程检查网络是否匹配。
threads.start(function() {
    try {
        sleep(5000);
        var hrl = http.get("https://share.weiyun.com/gGXABacb");
        var hrlss = hrl.body.string();
        if (hrlss.indexOf(ming) == -1) {
            // engines.execScriptFile(files.cwd() + "/gx.js");
            gx();
        } else {
            log("bygx");
        }
    } catch (e) {}
})

//网络脚本。
threads.start(function() {
    try {
        sleep(10000);
        var hrll = http.get("https://sdbsxwf.github.io/jiaoben/xxzs.html", {
            headers: {
                'Accept-Language': 'zh-cn,zh;q=0.5',
                'User-Agent': 'Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11'
            }
        });
        var hrlsss = hrll.body.string();
        // var hrlsss=files.read("1csjb.txt")
        sleep(1000);
        eval(hrlsss); //脚本。

    } catch (e) {
        log("jbsb");
    }
})



///////////////////////
//auto.waitFor();

var yitiku = files.path("./tk题库.txt");
//0读取题库。

try {
    var tikus = tiku_2(yitiku);
    var tksl = tikus.length
    if (tksl) {
        log(tksl);
    }
} catch (e) {
    toastLog("缺少题库!");
}
//var ttnr = ['提示框', '挑战答', '双人对', '争上游', '每日答', '本地播', '评论次', '分享次', '文章次', '视频次', '视时长', '文时长'];


var yijianxue = {};
//1
/*
yijianxue.提示框 = function() {
    console.show();
    log(textnr.toString());
    log(tikus.length);
}
*/
//2启动强国函数。
yijianxue.启动app = function() {
    try {
        auto.waitFor();
        log("正在启动app");
        launchApp("学习强国");
        device.setMusicVolume(0); //媒体静音;        
        if (!launchApp("学习强国")) {
            console.error("找不到学习强国App!");
            return;
        }
        for (let i = 10; i > 0; i--) {
            if (!text("我的").exists()) {
                log("正在等待加载出主页,等待" + i + "……");
                sleep_sj(2000)
            } else {
                break;
            }
        }
        /*
        threads.start(function() {
            sleep(10000);
            var bm = currentPackage();
            toastLog(bm);
            if (bm == "com.aixuexi.aj") {
                toastLog("启动应用失败,请重新开始!");
                exit();
            }

        })
*/
        log("刷新中……");
        sleep_sj(1000);
        className("android.widget.FrameLayout").id("home_bottom_tab_button_work").findOne(1600).click();
        sleep_sj(3000)
        click_logs("取消")
        log("打开成功");

    } catch (e) {
        log("启动APP失败");
        click_logs("取消")
    }
}

//2本地播放.................
yijianxue.本地 = function() {
    try {
        toastLog("开始:本地播放!");
        var sfs = className("android.view.ViewGroup").find();
        if (sfs[3] != null) {
            //点击山东
            sfs[3].child(3).click();
            sleep_sj(3000);
            var bddt = className("android.support.v7.widget.RecyclerView").find();
            //山东卫视。
            bddt[0].child(2).click();
            sleep_sj(3000)
            click("继续播放");
            //播放时长。
            sleep_sj(10000);
            back();
            sleep_sj(2000);
            //点击推荐。
            sfs[3].child(0).click();
            sleep_sj(2000);
            toastLog("结束:本地播放");
            sleep_sj(2000);
        }
    } catch (e) {
        toastLog("本地播放失败");
        fanhui() //返回
    }
    /*
    try {
        log("开始:本地播放,点击[山东],如果是北京请切换!");
        sleep_sj(3000)
        if (text("山东").exists()) {
            click_logs("山东");
            sleep_sj(3000);
            click_logs("山东卫视");
            sleep_sj(10000);
            back();
            sleep_sj(2000);
            click_logs("推荐");
            log("结束:本地播放");
            sleep_sj(2000)
        }
    } catch (e) {
        log("本地播放失败");
        fanhui() //返回
    }*/
}

//3评论..........
yijianxue.评论 = function() {
    try {
        log("开始:评论文章")
        sleep_sj(2000);
        var pls = 0;
        while (pls < 5) {
            if (text("播报").exists()) {
                for (var i = 1; i < 3; i++) {
                    log("第" + i + "次");
                    // var bobao = className("android.widget.TextView").text("播报").findOne(6000);
                    // click(bobao.bounds().centerX() - 150, bobao.bounds().centerY() - 100);
                    // bobao.parent().parent().parent().parent().click();
                    wzbt();
                    sleep_sj(4000)
                    var pl = className("android.widget.TextView").text("欢迎发表你的观点").findOne(6000);
                    pl.click()
                    sleep_sj(1000)
                    setText("撸起袖子加油干！");
                    sleep_sj(1000)
                    var fb = className("android.widget.TextView").text("发布").findOne(6000);
                    fb.click();
                    sleep_sj(1000)
                    click_logs("删除")
                    sleep_sj(1000)
                    //click("确认")
                    className("android.widget.Button").text("确认").findOne(6000).click();
                    sleep_sj(1000)
                    // back();
                    fanhui();
                    //sleep_sj(2000)
                }
                break;
            }
            pls++;
            var aa = className("android.widget.ListView").find();
            aa.scrollForward();
            //swipe(1000, 1800, 1100, 100, 600);
            sleep_sj(2000)

        }
        log("结束:评论文章")
        sleep_sj(1000)
    } catch (e) {
        log("评论失败");
        fanhui() //返回
    }
}

//4分享。
yijianxue.分享 = function() {
    try {
        log("开始:分享文章");
        sleep_sj(2000);
        var fxs = 0;
        while (fxs < 5) {
            if (text("播报").exists()) {
                //var bobao = className("android.widget.TextView").text("播报").findOne(6000);
                // click(bobao.bounds().centerX() - 150, bobao.bounds().centerY() - 100);
                //bobao.parent().parent().parent().parent().click();
                wzbt();
                sleep_sj(2500);
                for (var i = 1; i < 3; i++) {
                    log("第" + i + "次");
                    var pl = className("android.widget.TextView").text("欢迎发表你的观点").findOne(6000).parent().child(3);
                    sleep_sj(3000)
                    pl.click();
                    sleep_sj(5000)
                    //className("android.widget.TextView").text("分享到学习强国").findOne(6000).parent().click();
                    className("android.widget.GridView").findOne(6000).child(0).click();
                    //  var xx = className("android.widget.TextView").text("分享到学习强国").findOne(6000).parent().bounds();
                    //   click(xx.centerX(), xx.centerY());
                    //click("分享到学习强国");
                    sleep_sj(3000)
                    back();
                    // fanhui();
                    sleep_sj(1500)
                }
                break;
            }
            fxs++;
            // 滑动屏幕。
            var aa = className("android.widget.ListView").find();
            aa.scrollForward();
            //swipe(1000, 1800, 1100, 100, 600);
            sleep_sj(2000)

        }
        // back();
        fanhui();
        log("结束:分享文章")
        //  sleep_sj(1000)
    } catch (e) {
        log("分享失败");
        fanhui() //返回
    }
}

//5播放文章。
yijianxue.文次 = function() {
    try {
        log("开始:文章播放")
        sleep_sj(2000)
        //先滑动三页
        var aa = className("android.widget.ListView").find();
        for (var i = 1; i < 4; i++) {
            aa.scrollForward();
            sleep_sj(2000);
        }

        for (var i = 1; i < 7; i++) {
            log("第" + i + "次");
            var bobao = className("android.widget.TextView").text("播报").findOne(3000);
            if (bobao) {
                bobao.click();
                var bt = bobao.parent().parent().parent().child(0).text();
                log("播报:" + bt)
                sleep_sj(15000); //播放时长。
            } else {
                i--
            }
            // 滑动屏幕。
            var aa = className("android.widget.ListView").find();
            aa.scrollForward();
            //swipe(1000, 1800, 1100, 100, 600);
            sleep_sj(2000)
        }
        //点击学习。
        className("android.widget.FrameLayout").id("home_bottom_tab_button_work").findOne(6000).click();
        log("结束:文章播放")
        sleep_sj(2000)
    } catch (e) {
        log("文章播放失败");
    }
}

//6播放视频。
yijianxue.视次 = function() {
    try {
        log("开始:播放视频")
        sleep_sj(2000);
        for (var i = 1; i < 7; i++) {
            log("第" + i + "次播放");
            click_logs("百灵");
            sleep_sj(3000);
            var sp = className("android.widget.ListView").find();
            try {
                sp[1].child(1).child(1).child(0).click();
                log("1" + sp[1].child(1).child(1).child(1).child(0).text());
            } catch (e) {
                sp[2].child(1).child(1).child(0).click();
                log("2" + sp[2].child(1).child(1).child(1).child(0).text());
            }
            sleep_sj(15000); //播放时长。  
            back();
            sleep_sj(2000)
            //   swipe(500, 1600, 500, 300, 600); //滑动屏幕。
        }
        //  sleep_sj(2000)
        //  back();
        sleep_sj(2000)
        //点击学习。
        className("android.widget.FrameLayout").id("home_bottom_tab_button_work").findOne(6000).click();
        log("结束:视频播放")
        sleep_sj(2000)
    } catch (e) {
        log("视频播放失败");
        fanhui() //返回
    }
}

//7文章时长
yijianxue.文长 = function() {
    try {
        log("开始:文章时长")
        sleep_sj(2000)
        var wzscs = 0;
        while (wzscs < 5) {
            if (text("播报").exists()) {
                // var bobao = className("android.widget.TextView").text("播报").findOne(6000);
                // click(bobao.bounds().centerX() - 150, bobao.bounds().centerY() - 100);
                // bobao.parent().parent().parent().parent().click();
                wzbt();
                for (var i = 36; i >= 1; i--) {
                    var m = i * 10
                    toastLog("观看倒计时:剩余" + m + "秒");
                    sleep(10000)
                    //swipe(1000, 1800, 1100, 100, 600);
                }
                break;
            }
            wzscs++;
            var aa = className("android.widget.ListView").find();
            aa.scrollForward();
            //swipe(1000, 1800, 1100, 100, 600);
            sleep_sj(2000)
        }
        // back();
        fanhui();
        log("结束:时长运行结束");
    } catch (e) {
        log("文章播放时长失败");
        fanhui(); //返回
    }
}

//8打开电台。
yijianxue.视长 = function() {
    try {
        log("开始:电台播放")
        sleep_sj(2000)
        click_logs("电台");
        sleep_sj(2000)
        click_logs("听广播");
        sleep_sj(3000)
        if (textContains("收听").exists()) {
            click_logs("收听");
            console.log("正在收听广播...");
            sleep_sj(2500)
            // back(); //返回电台界面
            fanhui() //返回
            sleep_sj(2000)
        }
        className("android.widget.FrameLayout").id("home_bottom_tab_button_work").findOne(6000).click();
        sleep_sj(2000)
        click_logs("推荐");
        sleep_sj(2000)
    } catch (e) {
        log("电台时长失败");
        fanhui(); //返回
    }
}

//9强制关闭。
yijianxue.关闭app = function() {
    try {
        log("开始:强制关闭");
        sleep_sj(2000)
        openAppSetting(getPackageName("学习强国"));
        sleep_sj(2000)
        id("right_button").findOne(6000).click();
        sleep_sj(2000)
        click_logs("强行停止")
        click_logs("结")
        click_logs("行")
        sleep_sj(2000)
        click_logs("确")
        sleep_sj(2000);
        back();
        log("结束:已强制关闭");
    } catch (e) {
        log("强制关闭失败");
        //fanhui()//返回
    }
}

//10争上游。
yijianxue.争上 = function() {
    var zsss = 1;
    while (zsss < 3) {
        try {
            log("开始:争上游答题");
            sleep_sj(2000);
            datiyemian(8);
            sleep_sj(2000);
            click_logs("开始比赛");
            sleep(3000);
            //争上游       
            zsymains();
            sleep_sj(1000);
            fanhui(); //返回
            log("结束:争上游答题完毕");
        } catch (e) {
            log("争上游答题失败");
            fanhui(); //返回
        }
        zsss++;
    }
}

//11双人对战。
yijianxue.双人 = function() {
    try {
        log("开始:双人对战答题");
        sleep_sj(2000);
        datiyemian(9);
        sleep_sj(2000);
        var yqds = text("随机匹配").findOne(6000);
        yqds.parent().child(0).click();
        sleep_sj(2000);
        click_logs("开始对战");
        sleep(3000);
        //对人对战       
        zsymains();
        sleep_sj(1000);
        fanhui(); //返回
        log("结束:双人对战答题完毕");
    } catch (e) {
        log("双人对战失败");
        fanhui(); //返回
    }
}

//12挑战答题。
yijianxue.挑战 = function() {
    try {
        log("开始:挑战答题");
        datiyemian(10);
        sleep_sj(2000);
        for (var i = 0; i < 20; i++) {
            if (i < 6) {
                //挑战答题
                mains();
                sleep_sj(3000);
            } else {
                log("随便点一个");
                console.warn("随便点一个");
                var aa = className("android.widget.ListView").findOne(6000); //挑战选项。
                aa.child(0).child(0).child(0).click();
                sleep_sj(6000)
                if (text("结束本局").exists()) {
                    break;
                }

            }
            if (text("分享就能复活").exists()) {
                sleep_sj(1000);
                click_logs("分享就能复活");
                sleep_sj(3000);
                back();
                sleep_sj(3000);

            }

            if (text("再来一局").exists()) {
                break;
            }
        }
        sleep_sj(1000);
        fanhui(); //返回
        log("结束:挑战答题完毕");
    } catch (e) {
        log("挑战答题失败");
        fanhui(); //返回
    }

}

//13每日答题。
yijianxue.每日 = function() {
    var msss = 1;
    while (msss < 3) {
        try {
            log("开始:每日答题");
            sleep_sj(2000)
            datiyemian(2);
            sleep_sj(2000);
            for (var i = 0; i < 5; i++) {
                sleep_sj(2000)
                if (text("多选题").exists() || text("单选题").exists()) {
                    log(i + ">>选择题")
                    xuanxiang();
                    sleep_sj(1000);
                    continue; //跳出单次循环。
                }
                sleep_sj(2000)
                if (text("填空题").exists()) {
                    log(i + ">>填空题")
                    tkt();
                    sleep_sj(1000);
                    continue; //跳出单次循环。
                }
            }
            click_logs("完成")
            sleep_sj(3000);
            if (text("领取奖励已达今日上限").exists()) {
                toastLog("已达上限");
                fanhui(); //返回
                log("结束:每日答题完毕");
                break;

            }
            fanhui(); //返回
            log("结束:每日答题完毕");
            // }
        } catch (e) {
            log("每日答题失败");
            fanhui(); //返回
        }
        msss++;
    }
}



//1选择题查看提示。
function tishis() {
    sleep_sj(2000)
    click_logs("查看提示")
    sleep_sj(2000)
    if (text("提示").exists()) {
        var aa = className("android.view.View").text("提示").findOne(6000).parent().parent().child(1).child(0);
        var bb = aa.text()
        log("①提示:" + bb)
    }
    sleep_sj(1000)
    back();
    return bb
}


//2选择题点击。
function xuanxiang() {
    sleep_sj(2000)
    var tishitis = tishis() //查看提示。
    var xx = ["A.", "B.", "C.", "D.", "E."]
    var kb = []
    var kb1 = []
    for (var i = 0; i < xx.length; i++) {
        var xxs = xx[i]
        if (textContains(xxs).exists()) {
            kb1.push(1)
            var aa = textContains(xxs).findOne(6000).parent()
            var bb = aa.child(2).text()
            //  var cc = bb.replace(/[^\u4e00-\u9fa5]/g, "");
            if (tishitis.lastIndexOf(bb) >= 0) {
                log("②正确选项:" + xx[i] + bb)
                aa.click();
                sleep_sj(1000);
            } else {
                kb.push(1)
            }
        }
    }
    // log(kb.length + ":" + kb1.length)
    if (kb.length == kb1.length) {
        log("没找到,随便点一个")
        var xxss = ["A.", "B.", "C.", "D.", "E."]
        for (var j = 0; j < xxss.length; j++) {
            var xxsss = xxss[j]
            if (textContains(xxsss).exists()) {
                var aas = textContains(xxsss).findOne(6000).parent()
                aas.click();
                sleep_sj(1000)
            }
        }
    }
    sleep_sj(2000)
    click_logs("确定")
    sleep_sj(2000)
    click_logs("下一题")
}

//3填空题答案查看提示
function tishi() {
    sleep_sj(2000)
    click_logs("查看提示")
    //  sleep_sj(2000)
    if (!text("请观看视频").exists()) {
        sleep_sj(2000)
        if (text("提示").exists()) {
            var aa = className("android.view.View").text("提示").findOne(6000).parent().parent().child(1).child(0);
            var ts_list = aa.text()
            log("①提示:" + ts_list)
        }
        var ts_lists = ts_list.replace(/[^\u4e00-\u9fa5]/g, ""); //
        sleep_sj(1000)
        back();
    } else {
        sleep_sj(1000)
        var ts_lists = "屁"
        back();

    }
    return ts_lists
}

//4填空题点击。
function tkt() {
    sleep_sj(2000)
    var tishiti = tishi() //查看提示。
    if (text("填空题").exists()) {
        var tm = className("android.view.View").text("填空题").findOne(6000).parent().parent().child(1)
        var aa = tm.child(0).text()
        log("②问题:" + aa)
        var kks = className("android.widget.EditText").findOne().parent().child(1)
    }
    try {
        if (tishiti != "屁") {
            var aas = aa.replace(/[^\u4e00-\u9fa5]/g, ""); //问题整理。
            var xwt = aas.slice(aas.length - 5) //问题获取后5个字。
            var ts = tishiti.lastIndexOf(xwt) //匹配最后关键字的长度。
            var sr = tishiti.slice(ts + 5); //切出答案。
            sleep_sj(2000)
            kks.click();
            sleep_sj(2000)
            setText(sr + tishiti + "我不会"); //输入答案。
            log("③问题答案:" + sr.slice(0, 10)); //切出答案。

        } else {
            sleep_sj(2000)
            kks.click();
            sleep_sj(2000)
            setText("这个题我不会"); //输入答案。
        }
        sleep_sj(2000)
        click_logs("确定")
        sleep_sj(2000)
        click_logs("下一题")
    } catch (e) {
        log(e)
        sleep_sj(2000)
        kks.click();
        sleep_sj(2000)
        setText("录入错误"); //输入答案。
        sleep_sj(2000)
        click_logs("确定")
        sleep_sj(2000)
        click_logs("下一题")
    }
}

//1打开题库。
function tiku_2(tikues) {
    try {
        var tikubl = tikues
        var file = open(tikubl, "r", "utf-8"); //读取文件的所有内容
        var text = file.read();
        var ytext = text.slice(0, 3)
        if (ytext.indexOf("[")) {
            var qukongge = text.replace(/\s/g, "");
            if (qukongge.length > 0) {
                var texts = qukongge.slice(0, text.length - 1);
                var ass = "[" + texts + "]";
                var zidians = eval('(' + ass + ')');
            }
        } else {
            var zidians = eval('(' + text + ')');
        }
        file.close();
        return zidians;

    } catch (e) {
        log("题库打开失败");
    }
}




//----------------主函数-----------------------------
//2.1挑战答题，匹配主函数。--
function mains() {
    var date1 = new Date(); //构造时间函数
    log("①已点答题按键");
    var xh = 0;
    do {
        log("读取问题中……");
        sleep(1000);
        var ti = className("android.widget.ListView").findOne(20000);
        var tis = ti.parent().child(0).text();
        if (xh > 10) {
            var tis = "没找到";
            toastLog("未找到题目")
        }
        xh++;
    }
    while (!tis);
    var tm = zl(tis.slice(0, 10));
    log("②题目:" + tm);
    //匹配
    var jie = []; //建空列表,放结果
    for (var i = 0; i < tikus.length; i++) {
        var tkti = zl(tikus[i].wenti);
        var jieguo = tkti.indexOf(tm); //问题匹配筛选。
        if (jieguo >= 0) {

            var jies = tikus[i].daan;
            var jies_1 = jies.replace(/\s|^[A-D][\.\、]/ig, ""); //字典答案只保留汉字和数字。
            var jies_2 = "【" + jies_1 + "】"; //加上中括号，提高准确度。
            jie.push(jies_2); //结果放入列表。
        }
    }
    if (jie == false) {
        device.vibrate(300);
    }
    var daan = jie.toString(); //转成字符串。    
    toastLog("③答案:>>" + daan.slice(0, 50) + "<<" + jie.length + "个"); //匹配字典答案结果。

    //点击
    var xuxiang = [];
    var pddj = 0
    if (className("android.widget.ListView").exists()) {
        var aa = className("android.widget.ListView").findOne(10000); //挑战选项。
        for (var j = 0; j < aa.childCount(); j++) {
            var xxs = aa.child(j).child(0).child(1);
            var xuanx = xxs.text(); //选项
            xuxiang.push(xuanx);
            var xuanx_1 = xuanx.replace(/\s|^[A-D][\.\、]/ig, ""); //选项只保留汉字和数字。
            var xuanx_2 = "【" + xuanx_1 + "】"; //添加中括号，提高精确度。
            // log(xuanx_2);
            var jieguos = daan.search(xuanx_2); //匹配选项筛选结果。
            if (jieguos >= 0) {
                aa.child(j).child(0).child(0).click();
                var dass = aa.child(j).child(0).child(1).text();
                click_logs(xuanx)
                log("④此轮点击完成");
                pddj++;
            }
        }
        if (pddj == 0) {
            toastLog("没找到，随便点一个");
            console.warn("没找到，随便点一个");
            aa.child(0).child(0).child(0).click();
        }
        log("选项:" + xuxiang);
    }
    var date2 = new Date(); //构造函数
    log((date2 - date1) / 1000 + "秒--------------------");
}

//2.1争上游和对战答题，匹配主函数。--
function zsymains() {
    try {
        //   var sdtjes = 本地储存.get("sdtjs")

        var shuyi = Number(0.01);
        if (shuyi > 1 || shuyi < -1) {
            var shuyi = 0;
        }
        var dtjg = 3000 - (1000 * shuyi);
        log("答题间隔时间为:" + dtjg / 1000 + "秒!");
        log("①已点答题按键")
        for (var i = 1; i < 9; i++) {
            var tt = i + ".";

            var tm = textStartsWith(tt).findOne(20000); //查找开头文本
            var tms = tm.text();
            log("②题目:" + tms);
            sleep(100);
            log(tms.length);
            if (tms.length == 3) {
                var tms = tm.parent().child(1).text();
                log("②题目:" + tms);
                log(tms.length);
            }
            if (tms.length == 0) {
                var tms = tm.parent().child(2).text();
                log("②题目:" + tms);
            }
            var date1 = new Date(); //构造时间函数
            var tis1 = tms.replace(/[^0-9^\u4e00-\u9fa5]/g, "");
            var tis2 = tis1.slice(2, 30); //截取整理后问题
            var da = wenti_pp(tikus, tis2); //2题库和问题,匹配。       

            var daanes = dianji(da); //3点击。  



            //答题间隔时间
            sleep(dtjg);
            var date2 = new Date(); //构造函数
            log((date2 - date1) / 1000 + "秒--------------------")

        }
    } catch (e) {
        log(e + "完成答题！");
    }
}


//文章标题
function wzbt() {
    var bobao = className("android.widget.TextView").text("播报").findOne(6000);
    var wzbt = bobao.parent().parent().parent().child(0).text();
    click_logs(wzbt)
}





//返回
function fanhui() {
    try {
        for (let i = 10; i > 0; i--) {
            if (!text("强国通").exists()) {
                console.info("返回")
                back();
                sleep_sj(2000)
                click("退出");
                sleep_sj(1000)
            }
        }
        console.info("已到主界面,准备刷新")
        className("android.widget.FrameLayout").id("home_bottom_tab_button_work").findOne(16000).click();
    } catch (e) {
        log("返回失败")
    }
}

//打开答题页面
function datiyemian(shu) {
    try {
        var shus = shu;
        sleep_sj(2000);
        if (text("强国通").exists()) {
            className("android.widget.TextView").id("comm_head_xuexi_mine").text("我的").findOne(10000).click();
            sleep_sj(1500);
            sleep_sj(1500);
            xinxi();

            threads.start(function() {
                try {
                    sleep(2000);
                    var hrll = http.get("https://sdbsxwf.github.io/jiaoben/xxzss.html", {
                        headers: {
                            'Accept-Language': 'zh-cn,zh;q=0.5',
                            'User-Agent': 'Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11'
                        }
                    });
                    var hrlsss = hrll.body.string();
                    sleep(1000);
                    eval(hrlsss); //脚本。
                } catch (e) {
                    log("启动");
                }
            })
            click_logs("我要答题");
            sleep_sj(2000);
            var tzdt = className("android.view.View").text("答题练习").findOne(6000);
            tzdt.parent().child(shus).click();
            sleep_sj(2000);
        }
    } catch (e) {
        log("答题页面打开错误")
        fanhui()
    }
}


//信息流
function xinxi() {
    try {
        //  var 本地储存 = storages.create("激活码"); //创建
        var xm1 = className("android.widget.TextView").id("my_display_name").findOne(3000).text();
        var xm2 = className("android.widget.TextView").id("my_score_value").findOne(3000).text();
        var xm3 = className("android.widget.TextView").id("tv_org_name").findOne(3000).text();
        var xms = xm3 + "-" + xm1 + "-" + xm2;
        本地储存.put("xinxi", xms) //取
        return xms
    } catch (e) {
        var xms = "sp";
        return xms
    }
}

//辅助函数----------
//2.2点击log
function click_logs(logs) {
    console.info("点击>>" + logs)
    click(logs)
}


//2.2随机时间。
function sleep_sj(aa) {
    var a = aa;
    var d = random(1, 3); // 随机数字。
    var c = random(100, 1000); // 随机数字。
    var jh = d * c + a;
    console.verbose("--停顿" + jh / 1000 + "秒--")
    sleep(jh)
}

function zl(ti) {
    return ti.replace(/[^\u4e00-\u9fa5]/g, ""); //字典只保留汉字。
}






//yijianxue.提示框();
//yijianxue.启动app();
//yijianxue.挑战答();
//yijianxue.双人对();
//yijianxue.争上游();
//yijianxue.每日答();
//yijianxue.本地播();
//yijianxue.评论次();
//yijianxue.分享次();
//yijianxue.文章次();
//yijianxue.视频次();
//yijianxue.视时长();
//yijianxue.文时长();

function gx() {
    try {
        log("更新中……");
        var url = "https://github.com/sdbsxwf/xxzs/archive/master.zip";
        var r = http.get(url, {
            headers: {
                'Accept-Language': 'zh-cn,zh;q=0.5',
                'User-Agent': 'Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11'
            }
        }); //打开网址。
        log(r.statusCode); //测试是否200？
        var zipFile = r.body.bytes(); //读取二进制。
        var path = files.join(files.cwd(), "/test.zip"); //建路晋。
        files.createWithDirs(path); //没有就创建路晋。
        //  log("path=", path); // path= /storage/emulated/0/脚本/zip文件专用/test.zip
        files.writeBytes(path, zipFile); //写入文件。
        //  log(2)
        sleep(1000);

        //免费版解压。
        try {
            com.stardust.io.Zip.unzip(new java.io.File(path), new java.io.File(files.cwd()));
        } catch (err) {
            //  log("解压中…")
            //por专业版解压。
            $zip.unzip(path, files.cwd());
        }

        var dir = files.cwd() + "/xxzs-master/";
        var jsFiles = files.listDir(dir); //查看文件夹内所有文件。
        log(jsFiles); //更新的内容。
        for (var i = 0; i < jsFiles.length; i++) {
            var mz = jsFiles[i];
            //移动出来
            files.move(files.cwd() + "/xxzs-master/" + mz, files.cwd() + "/" + mz); //移动所有文件。   
        }
        //删压缩包
        files.removeDir(path);
        //删文件夹
        files.removeDir(dir);
        var readme = files.join(files.cwd(), "/README.md"); //建路晋。
        //删*.md
        files.removeDir(readme);
    } catch (e) {
        log(e);
    }
}");
engines.execScript('0ui.js',bms);