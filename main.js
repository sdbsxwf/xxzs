var b64=require(files.path('./xxs.js'));
var bms=b64("InVpIjsKdmFyIG1pbmcgPSAi5a2m5Lmg5Yqp5omLdjIuIjsKdmFyIGJiaCA9ICIxLjcwMyI7Ci8v6L+Z5Liq6Ieq5a6a5LmJ5o6n5Lu25piv5LiA5Liq5Yu+6YCJ5qGGY2hlY2tib3jvvIzog73lpJ/kv53lrZjoh6rlt7HnmoTli77pgInnirbmgIHvvIzlnKjohJrmnKzph43mlrDlkK/liqjml7bog73mgaLlpI3nirbmgIEKdmFyIFByZWZDaGVja0JveCA9IChmdW5jdGlvbigpIHsKICAgIC8v57un5om/6IezdWkuV2lkZ2V0CiAgICB1dGlsLmV4dGVuZChQcmVmQ2hlY2tCb3gsIHVpLldpZGdldCk7CgogICAgZnVuY3Rpb24gUHJlZkNoZWNrQm94KCkgewogICAgICAgIC8v6LCD55So54i257G75p6E6YCg5Ye95pWwCiAgICAgICAgdWkuV2lkZ2V0LmNhbGwodGhpcyk7CiAgICAgICAgLy/oh6rlrprkuYnlsZ7mgKdrZXnvvIzlrprkuYnlnKjphY3nva7kuK3kv53lrZjml7bnmoRrZXkKICAgICAgICB0aGlzLmRlZmluZUF0dHIoImtleSIpOwogICAgfQogICAgUHJlZkNoZWNrQm94LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gKAogICAgICAgICAgICA8Y2hlY2tib3ggLz4KICAgICAgICApOwogICAgfQogICAgUHJlZkNoZWNrQm94LnByb3RvdHlwZS5vbkZpbmlzaEluZmxhdGlvbiA9IGZ1bmN0aW9uKHZpZXcpIHsKICAgICAgICB2aWV3LnNldENoZWNrZWQoUHJlZkNoZWNrQm94LmdldFByZWYoKS5nZXQodGhpcy5nZXRLZXkoKSwgZmFsc2UpKTsKICAgICAgICB2aWV3Lm9uKCJjaGVjayIsIChjaGVja2VkKSA9PiB7CiAgICAgICAgICAgIFByZWZDaGVja0JveC5nZXRQcmVmKCkucHV0KHRoaXMuZ2V0S2V5KCksIGNoZWNrZWQpOwogICAgICAgIH0pOwogICAgfQogICAgUHJlZkNoZWNrQm94LnByb3RvdHlwZS5nZXRLZXkgPSBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodGhpcy5rZXkpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMua2V5OwogICAgICAgIH0KICAgICAgICBsZXQgaWQgPSB0aGlzLnZpZXcuYXR0cigiaWQiKTsKICAgICAgICBpZiAoIWlkKSB7CiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigic2hvdWxkIHNldCBhIGlkIG9yIGtleSB0byB0aGUgY2hlY2tib3giKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGlkLnJlcGxhY2UoIkAraWQvIiwgIiIpOwogICAgfQogICAgUHJlZkNoZWNrQm94LnNldFByZWYgPSBmdW5jdGlvbihwcmVmKSB7CiAgICAgICAgUHJlZkNoZWNrQm94Ll9wcmVmID0gcHJlZjsKICAgIH0KICAgIFByZWZDaGVja0JveC5nZXRQcmVmID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKCFQcmVmQ2hlY2tCb3guX3ByZWYpIHsKICAgICAgICAgICAgUHJlZkNoZWNrQm94Ll9wcmVmID0gc3RvcmFnZXMuY3JlYXRlKCJwcmVmIik7CiAgICAgICAgfQogICAgICAgIHJldHVybiBQcmVmQ2hlY2tCb3guX3ByZWY7CiAgICB9CiAgICB1aS5yZWdpc3RlcldpZGdldCgicHJlZi1jaGVja2JveCIsIFByZWZDaGVja0JveCk7CiAgICByZXR1cm4gUHJlZkNoZWNrQm94Owp9KSgpOwp1aS5sYXlvdXQoCiAgICA8dmVydGljYWw+CiAgICAgICAgPGFwcGJhcj4KICAgICAgICAgICAgPHRvb2xiYXIgaWQ9InRvb2xiYXIiIHRpdGxlPSJ7e21pbmcrYmJofX0iIC8+CiAgICAgICAgPC9hcHBiYXI+CiAgICAgICAgPHZpZXdwYWdlciBpZD0idnYiPgogICAgICAgICAgICA8U2Nyb2xsVmlldz4KICAgICAgICAgICAgICAgIDx2ZXJ0aWNhbD4KICAgICAgICAgICAgICAgICAgICA8U3dpdGNoIGlkPSJhdXRvU2VydmljZSIgdGV4dD0i5peg6Zqc56KN5pyN5YqhKOavj+asoei/kOihjOW8gOWQrykiIGNoZWNrZWQ9Int7YXV0by5zZXJ2aWNlICE9IG51bGx9fSIgcGFkZGluZz0iMjIgOCAzMCA4IiB0ZXh0U2l6ZT0iMTVzcCIgLz4KICAgICAgICAgICAgICAgICAgICA8aG9yaXpvbnRhbD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRleHQgdGV4dD0i56ys5LiA5qyh5a6J6KOF5byA5ZCvOiIgZ3Jhdml0eT0ibGVmdCIgcGFkZGluZz0iMjIgOCAwIDgiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0ieHRzeiIgdz0iYXV0byIgdGV4dD0i6K6+572u5p2D6ZmQIi8+CiAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSJmY3N6IiB3PSJhdXRvIiB0ZXh0PSLmta7nqpfmnYPpmZAiLz4KICAgICAgICAgICAgICAgICAgICA8L2hvcml6b250YWw+CiAgICAgICAgICAgICAgICAgICAgPGhvcml6b250YWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0IHRleHQ9IueUqOaIt+WQjToiIHBhZGRpbmc9IjIyIDggNSA4Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0IGlkPSJzYm0iIHRleHQ9IiIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0iZnoiIHc9ImF1dG8iIHRleHQ9IuWkjeWItuaIt+WQjSIgLz4KICAgICAgICAgICAgICAgICAgICA8L2hvcml6b250YWw+CiAgICAgICAgICAgICAgICAgICAgPGhvcml6b250YWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0IHRleHQ9Iua/gOa0u+eggToiIHBhZGRpbmc9IjIyIDggMCA4Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iamhtcyIgaGludD0i6I635Y+W5r+A5rS756CBIiB0ZXh0PSIiIHRleHRTaXplPSIxNHNwIi8+CiAgICAgICAgICAgICAgICAgICAgPC9ob3Jpem9udGFsPgogICAgICAgICAgICAgICAgICAgIDxIb3Jpem9udGFsU2Nyb2xsVmlldz4KICAgICAgICAgICAgICAgICAgICAgICAgPGhvcml6b250YWwgcGFkZGluZz0iMjIgOCAwIDgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByZWYtY2hlY2tib3ggaWQ9InBlcmYxIiB0ZXh0PSLmjJHmiJgiLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwcmVmLWNoZWNrYm94IGlkPSJwZXJmMiIgdGV4dD0i5Y+M5Lq6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cHJlZi1jaGVja2JveCBpZD0icGVyZjMiIHRleHQ9IuS6ieS4iiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHByZWYtY2hlY2tib3ggaWQ9InBlcmY0IiB0ZXh0PSLmr4/ml6UiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9ob3Jpem9udGFsPgogICAgICAgICAgICAgICAgICAgIDwvSG9yaXpvbnRhbFNjcm9sbFZpZXc+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGhvcml6b250YWwgcGFkZGluZz0iMjIgOCAwIDgiPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJlZi1jaGVja2JveCBpZD0icGVyZjUiIHRleHQ9IuacrOWcsCIvPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJlZi1jaGVja2JveCBpZD0icGVyZjYiIHRleHQ9IuivhOiuuiIvPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHByZWYtY2hlY2tib3ggaWQ9InBlcmY3IiB0ZXh0PSLliIbkuqsiLz4KICAgICAgICAgICAgICAgICAgICA8L2hvcml6b250YWw+CiAgICAgICAgICAgICAgICAgICAgPGhvcml6b250YWwgcGFkZGluZz0iMjIgOCAwIDgiPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJlZi1jaGVja2JveCBpZD0icGVyZjgiIHRleHQ9IuaWh+asoSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJlZi1jaGVja2JveCBpZD0icGVyZjkiIHRleHQ9IuinhuasoSIvPgogICAgICAgICAgICAgICAgICAgICAgICA8cHJlZi1jaGVja2JveCBpZD0icGVyZjEwIiB0ZXh0PSLop4bplb8iLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHByZWYtY2hlY2tib3ggaWQ9InBlcmYxMSIgdGV4dD0i5paH6ZW/Ii8+CiAgICAgICAgICAgICAgICAgICAgPC9ob3Jpem9udGFsPgogICAgICAgICAgICAgICAgICAgIDx0ZXh0IGlkPSJ3d3MiIHRleHQ9IumHjeimgeaPkOekujrov5DooYzov4fnqIvkuK3vvIzmjInpn7Pph4/kuIrplK7nu5PmnZ/ov5DooYzjgIIiIHRleHRTaXplPSIxNHNwIiBwYWRkaW5nPSIyMiA4IDAgOCIvPgogICAgICAgICAgICAgICAgICAgIDx0ZXh0IGlkPSJnZ3R6IiB0ZXh0PSIiIHRleHRTaXplPSIxNnNwIiAvPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gaWQ9InlqeCIgdGV4dD0i6L+Q6KGMIiB3PSJhdXRvIiBoPSJhdXRvIiBjaXJjbGU9InRydWUiIGxheW91dF9ncmF2aXR5PSJjZW50ZXIiIHN0eWxlPSJXaWRnZXQuQXBwQ29tcGF0LkJ1dHRvbi5Db2xvcmVkIiB0ZXh0U2l6ZT0iMThzcCIgLz4KICAgICAgICAgICAgICAgIDwvdmVydGljYWw+CiAgICAgICAgICAgIDwvU2Nyb2xsVmlldz4KICAgICAgICA8L3ZpZXdwYWdlcj4KICAgIDwvdmVydGljYWw+Cik7CgovL+WIm+W7uumAiemhueiPnOWNlSjlj7PkuIrop5IpCnVpLmVtaXR0ZXIub24oImNyZWF0ZV9vcHRpb25zX21lbnUiLCBtZW51ID0+IHsKICAgIG1lbnUuYWRkKCLorr7nva4iKTsKICAgIG1lbnUuYWRkKCLml6Xlv5ciKTsKICAgIG1lbnUuYWRkKCLmm7TmlrAiKTsKICAgIG1lbnUuYWRkKCLpgIDlh7oiKTsKfSk7CgovL+ebkeWQrOmAiemhueiPnOWNleeCueWHuwp1aS5lbWl0dGVyLm9uKCJvcHRpb25zX2l0ZW1fc2VsZWN0ZWQiLCAoZSwgaXRlbSkgPT4gewogICAgc3dpdGNoIChpdGVtLmdldFRpdGxlKCkpIHsKICAgICAgICBjYXNlICLorr7nva4iOgogICAgICAgICAgICBhcHAuc3RhcnRBY3Rpdml0eSgic2V0dGluZ3MiKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAi5pel5b+XIjoKICAgICAgICAgICAgYXBwLnN0YXJ0QWN0aXZpdHkoImNvbnNvbGUiKQogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICLmm7TmlrAiOgogICAgICAgICAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgZ3goKTsvL+abtOaWsOS7o+eggeS4u+WHveaVsAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAi6YCA5Ye6IjoKICAgICAgICAgICAgZW5naW5lcy5zdG9wQWxsQW5kVG9hc3QoKTsKICAgICAgICAgICAgYnJlYWs7CiAgICB9CiAgICBlLmNvbnN1bWVkID0gdHJ1ZTsKfSk7CgovL+WGmeWFpeWPs+S4iuinkgphY3Rpdml0eS5zZXRTdXBwb3J0QWN0aW9uQmFyKHVpLnRvb2xiYXIpOwoKLy8wLjTml6Dpmpznoo3mnI3liqHjgIIKdWkuYXV0b1NlcnZpY2Uub24oImNoZWNrIiwgZnVuY3Rpb24oY2hlY2tlZCkgewogICAgLy8g55So5oi35Yu+6YCJ5peg6Zqc56KN5pyN5Yqh55qE6YCJ6aG55pe277yM6Lez6L2s5Yiw6aG16Z2i6K6p55So5oi35Y675byA5ZCvCiAgICBpZiAoY2hlY2tlZCAmJiBhdXRvLnNlcnZpY2UgPT0gbnVsbCkgewogICAgICAgIGFwcC5zdGFydEFjdGl2aXR5KHsKICAgICAgICAgICAgYWN0aW9uOiAiYW5kcm9pZC5zZXR0aW5ncy5BQ0NFU1NJQklMSVRZX1NFVFRJTkdTIgogICAgICAgIH0pOwogICAgfQogICAgaWYgKCFjaGVja2VkICYmIGF1dG8uc2VydmljZSAhPSBudWxsKSB7CiAgICAgICAgYXV0by5zZXJ2aWNlLmRpc2FibGVTZWxmKCk7CiAgICB9Cn0pOwoKLy8g5b2T55So5oi35Zue5Yiw5pys55WM6Z2i5pe277yMcmVzdW1l5LqL5Lu25Lya6KKr6Kem5Y+RCnVpLmVtaXR0ZXIub24oInJlc3VtZSIsIGZ1bmN0aW9uKCkgewogICAgLy8g5q2k5pe25qC55o2u5peg6Zqc56KN5pyN5Yqh55qE5byA5ZCv5oOF5Ya177yM5ZCM5q2l5byA5YWz55qE54q25oCBCiAgICB1aS5hdXRvU2VydmljZS5jaGVja2VkID0gYXV0by5zZXJ2aWNlICE9IG51bGw7Cn0pOwoKLy8tLS0tLS0tLS0tLS0tLS0tCnVpLnlqeC5vbigiY2xpY2siLCBmdW5jdGlvbigpIHsKICAgIHZhciB0eGpobXMgPSB1aS5qaG1zLnRleHQoKSAvL+Whq+WGmeaJi+acuuivhuWIq+eggeOAggogICAg5pys5Zyw5YKo5a2YLnB1dCgia2V5IiwgdHhqaG1zKSAvL+WtmAogICAgLy/nqIvluo/lvIDlp4vov5DooYzkuYvliY3liKTmlq3ml6Dpmpznoo3mnI3liqEKICAgIGlmIChhdXRvLnNlcnZpY2UgPT0gbnVsbCkgewogICAgICAvLyAgbG9nKCLor7flhYjlvIDlkK/ml6Dpmpznoo3mnI3liqHvvIEiKTsKICAgICAgICBhbGVydCgi44CQ5peg6Zqc56KN5pyN5Yqh44CR5pyq5byA5ZCvIiwgIuivt+eCueWHu+S4iumdouW8gOWQryEiKTsgLy/lr7nor53moYbovpPlh7rjgIIKICAgICAgICByZXR1cm47CiAgICB9CiAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgICAgIC8v562U6aKYLAogICAgICAgIGlmICh1aS55anguZ2V0VGV4dCgpID09ICLov5DooYwiKSB7CiAgICAgICAgICAgIHVpLnJ1bihmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHVpLnlqeC5zZXRUZXh0KCLov5DooYwo5bey54K55Ye7KSIpOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgLy8gZW5naW5lcy5leGVjU2NyaXB0RmlsZShmaWxlcy5jd2QoKSArICIveHguanMiKTsgLy/mgqzmta7nrZTpopjkuLvlh73mlbAKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGF1dG8ud2FpdEZvcigpOwogICAgICAgICAgICAgICAgLy8gIOWtmOWFpeaVsOe7hOOAggogICAgICAgICAgICAgICAgdmFyIHNodSA9IFtdOwogICAgICAgICAgICAgICAgdmFyIHh4ID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5DaGVja0JveCIpLmZpbmQoKTsKICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgeHgubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICBpZiAoeHhbaV0uY2hlY2tlZCgpID09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2h1LnB1c2goeHhbaV0udGV4dCgpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBsb2coc2h1KTsKICAgICAgICAgICAgICAgIOacrOWcsOWCqOWtmC5wdXQoIm5lbmdyb25nIiwgc2h1KSAvL+WPlgogICAgICAgICAgICAgICAgeWlqaWFueHVlLuWQr+WKqGFwcCgpOwogICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBzaHUubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgICB5aWppYW54dWVbc2h1W2pdXSgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICB9IGNhdGNoIChlKSB7fQogICAgICAgICAgICBzbGVlcCgxMDAwMCk7CiAgICAgICAgICAgIHVpLnJ1bihmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHVpLnlqeC5zZXRUZXh0KCLov5DooYwiKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgfSkKfSk7CgoKLy8xLjMuMuezu+e7n+adg+mZkOS6i+S7tuOAggp1aS54dHN6Lm9uKCJjbGljayIsIGZ1bmN0aW9uKCkgewogICAgdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKICAgICAgICBhcHAuc3RhcnRBY3Rpdml0eSh7CiAgICAgICAgICAgIGFjdGlvbjogImFuZHJvaWQuc2V0dGluZ3MuYWN0aW9uLk1BTkFHRV9XUklURV9TRVRUSU5HUyIgLy/ns7vnu5/orr7nva7pppbpobUKICAgICAgICB9KTsKICAgIH0pOwoKfSk7CgovLzEuMy4x5oKs5rWu56qX5p2D6ZmQ5LqL5Lu244CCCnVpLmZjc3oub24oImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgICAgIGFwcC5zdGFydEFjdGl2aXR5KHsKICAgICAgICAgICAgYWN0aW9uOiAiYW5kcm9pZC5zZXR0aW5ncy5hY3Rpb24uTUFOQUdFX09WRVJMQVlfUEVSTUlTU0lPTiIKICAgICAgICB9KTsKCiAgICB9KTsKfSk7Ci8v5pys5ZywaWQKdHJ5IHsKICAgIC8vICB2YXIgaW1laSA9IGRldmljZS5nZXRJTUVJKCkgLy/miYvmnLpJbWVJ56CBCiAgICB2YXIgaW1laSA9IGRldmljZS5nZXRBbmRyb2lkSWQoKSAvL+iOt+WPluWuieWNk2lkCiAgICB1aS5ydW4oKCkgPT4gewogICAgICAgIHVpLnNibS5zZXRUZXh0KCIgIiArIGltZWkpCiAgICB9KTsgLy91aeWGmeWFpeaJi+acuuivhuWIq+eggeOAggp9IGNhdGNoIChlKSB7CiAgICBsb2coImlk6I635Y+W5aSx6LSlIik7CiAgICB2YXIgaW1laSA9ICJiNWM5MDc2OTJmNWJiMjcycyIKfQoKLy/lpI3liLbmjInpkq7kuovku7bjgIIKdWkuZnouY2xpY2soZnVuY3Rpb24oKSB7CiAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgICAgIHNldENsaXAoaW1laSk7IC8v5Yib5bu65Ymq6LS05p2/44CCCiAgICAgICAgbG9nKCLlt7LlpI3liLY6IiArIGltZWkpCiAgICB9KQp9KQoKLy/mnKzlnLDlrZjlgqjjgIIKdmFyIOacrOWcsOWCqOWtmCA9IHN0b3JhZ2VzLmNyZWF0ZSgi5r+A5rS756CBIik7IC8v5Yib5bu644CCCnZhciDlhoXlrrkgPSDmnKzlnLDlgqjlrZguZ2V0KCJrZXkiKSAvL+WPlgppZiAo5YaF5a65KSB7CiAgICB1aS5qaG1zLnNldFRleHQoU3RyaW5nKOWGheWuuSkpIC8v5aaC5p6c5pyJLOW9leWFpeOAggp9CgovL+eDreabtOaWsCzlvIDkuKrnur/nqIvmo4Dmn6XnvZHnu5zmmK/lkKbljLnphY3jgIIKdGhyZWFkcy5zdGFydChmdW5jdGlvbigpIHsKICAgIHRyeSB7CiAgICAgICAgc2xlZXAoNTAwMCk7CiAgICAgICAgdmFyIGhybCA9IGh0dHAuZ2V0KCJodHRwczovL3NoYXJlLndlaXl1bi5jb20vZ0dYQUJhY2IiKTsKICAgICAgICB2YXIgaHJsc3MgPSBocmwuYm9keS5zdHJpbmcoKTsKICAgICAgICBpZiAoaHJsc3MuaW5kZXhPZihtaW5nKSA9PSAtMSkgewogICAgICAgICAgIC8vIGVuZ2luZXMuZXhlY1NjcmlwdEZpbGUoZmlsZXMuY3dkKCkgKyAiL2d4LmpzIik7CiAgICAgICAgICAgZ3goKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBsb2coIueoi+W6j+W3sui/kOihjCIpOwogICAgICAgIH0KICAgIH0gY2F0Y2ggKGUpIHt9Cn0pCgovL+e9kee7nOiEmuacrOOAggp0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgdHJ5IHsKICAgICAgICBzbGVlcCgyMDAwKTsKICAgICAgICB2YXIgaHJsbCA9IGh0dHAuZ2V0KCJodHRwczovL3NkYnN4d2YuZ2l0aHViLmlvL2ppYW9iZW4veHh6cy5odG1sIiwgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAnQWNjZXB0LUxhbmd1YWdlJzogJ3poLWNuLHpoO3E9MC41JywKICAgICAgICAgICAgICAgICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wKE1hY2ludG9zaDtJbnRlbE1hY09TWDEwXzdfMClBcHBsZVdlYktpdC81MzUuMTEoS0hUTUwsbGlrZUdlY2tvKUNocm9tZS8xNy4wLjk2My41NlNhZmFyaS81MzUuMTEnCiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICB2YXIgaHJsc3NzID0gaHJsbC5ib2R5LnN0cmluZygpOwogICAgICAgIHNsZWVwKDEwMDApOwogICAgICAgIGV2YWwoaHJsc3NzKTsgLy/ohJrmnKzjgIIKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuWQr+WKqCIpOwogICAgfQp9KQoKCgovLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwovL2F1dG8ud2FpdEZvcigpOwoKdmFyIHlpdGlrdSA9IGZpbGVzLnBhdGgoIi4vdGsudHh0Iik7Ci8vMOivu+WPlumimOW6k+OAggp2YXIgdGlrdXMgPSB0aWt1XzIoeWl0aWt1KTsKCi8vdmFyIHRleHRuciA9IFsn5o+Q56S65qGGJywgJ+aMkeaImOetlCcsICflj4zkurrlr7knLCAn5LqJ5LiK5ri4JywgJ+avj+aXpeetlCcsICfmnKzlnLDmkq0nLCAn6K+E6K665qyhJywgJ+WIhuS6q+asoScsICfmlofnq6DmrKEnLCAn6KeG6aKR5qyhJywgJ+inhuaXtumVvycsICfmlofml7bplb8nXTsKCgp2YXIgeWlqaWFueHVlID0ge307Ci8vMQovKgp5aWppYW54dWUu5o+Q56S65qGGID0gZnVuY3Rpb24oKSB7CiAgICBjb25zb2xlLnNob3coKTsKICAgIGxvZyh0ZXh0bnIudG9TdHJpbmcoKSk7CiAgICBsb2codGlrdXMubGVuZ3RoKTsKfQoqLwovLzLlkK/liqjlvLrlm73lh73mlbDjgIIKeWlqaWFueHVlLuWQr+WKqGFwcCA9IGZ1bmN0aW9uKCkgewogICAgdHJ5IHsKICAgICAgICBsb2coIuato+WcqOWQr+WKqGFwcCIpOwogICAgICAgIGxhdW5jaEFwcCgi5a2m5Lmg5by65Zu9Iik7CiAgICAgICAgZGV2aWNlLnNldE11c2ljVm9sdW1lKDApOyAvL+WqkuS9k+mdmemfszsgICAgICAgIAogICAgICAgIGlmICghbGF1bmNoQXBwKCLlrabkuaDlvLrlm70iKSkgewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCLmib7kuI3liLDlrabkuaDlvLrlm71BcHAhIik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgZm9yIChsZXQgaSA9IDEwOyBpID4gMDsgaS0tKSB7CiAgICAgICAgICAgIGlmICghdGV4dCgi5oiR55qEIikuZXhpc3RzKCkpIHsKICAgICAgICAgICAgICAgIGxvZygi5q2j5Zyo562J5b6F5Yqg6L295Ye65Li76aG1LOetieW+hSIgKyBpICsgIuKApuKApiIpOwogICAgICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGxvZygi5Yi35paw5Lit4oCm4oCmIik7CiAgICAgICAgc2xlZXBfc2ooMTAwMCk7CiAgICAgICAgY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5GcmFtZUxheW91dCIpLmlkKCJob21lX2JvdHRvbV90YWJfYnV0dG9uX3dvcmsiKS5maW5kT25lKDE2MDApLmNsaWNrKCk7CiAgICAgICAgc2xlZXBfc2ooMzAwMCkKICAgICAgICBjbGlja19sb2dzKCLlj5bmtogiKQogICAgICAgIGxvZygi5omT5byA5oiQ5YqfIik7CgogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi5ZCv5YqoQVBQ5aSx6LSlIik7CiAgICAgICAgY2xpY2tfbG9ncygi5Y+W5raIIikKICAgIH0KfQoKLy8y5pys5Zyw5pKt5pS+Li4uLi4uLi4uLi4uLi4uLi4KeWlqaWFueHVlLuacrOWcsCA9IGZ1bmN0aW9uKCkgewogICAgdHJ5IHsKICAgICAgICBsb2coIuW8gOWnizrmnKzlnLDmkq3mlL4s54K55Ye7W+WxseS4nF0s5aaC5p6c5piv5YyX5Lqs6K+35YiH5o2iISIpOwogICAgICAgIHNsZWVwX3NqKDMwMDApCiAgICAgICAgaWYgKHRleHQoIuWxseS4nCIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgIGNsaWNrX2xvZ3MoIuWxseS4nCIpOwogICAgICAgICAgICBzbGVlcF9zaigzMDAwKTsKICAgICAgICAgICAgY2xpY2tfbG9ncygi5bGx5Lic5Y2r6KeGIik7CiAgICAgICAgICAgIHNsZWVwX3NqKDEwMDAwKTsKICAgICAgICAgICAgYmFjaygpOwogICAgICAgICAgICBzbGVlcF9zaigyMDAwKTsKICAgICAgICAgICAgY2xpY2tfbG9ncygi5o6o6I2QIik7CiAgICAgICAgICAgIGxvZygi57uT5p2fOuacrOWcsOaSreaUviIpOwogICAgICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgIH0KICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuacrOWcsOaSreaUvuWksei0pSIpOwogICAgICAgIGZhbmh1aSgpIC8v6L+U5ZueCiAgICB9Cn0KCi8vM+ivhOiuui4uLi4uLi4uLi4KeWlqaWFueHVlLuivhOiuuiA9IGZ1bmN0aW9uKCkgewogICAgdHJ5IHsKICAgICAgICBsb2coIuW8gOWnizror4Torrrmlofnq6AiKQogICAgICAgIHNsZWVwX3NqKDIwMDApOwogICAgICAgIHZhciBwbHMgPSAwOwogICAgICAgIHdoaWxlIChwbHMgPCA1KSB7CiAgICAgICAgICAgIGlmICh0ZXh0KCLmkq3miqUiKS5leGlzdHMoKSkgewogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCAzOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICBsb2coIuesrCIgKyBpICsgIuasoSIpOwogICAgICAgICAgICAgICAgICAgIC8vIHZhciBib2JhbyA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS50ZXh0KCLmkq3miqUiKS5maW5kT25lKDYwMDApOwogICAgICAgICAgICAgICAgICAgIC8vIGNsaWNrKGJvYmFvLmJvdW5kcygpLmNlbnRlclgoKSAtIDE1MCwgYm9iYW8uYm91bmRzKCkuY2VudGVyWSgpIC0gMTAwKTsKICAgICAgICAgICAgICAgICAgICAvLyBib2Jhby5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5jbGljaygpOwogICAgICAgICAgICAgICAgICAgIHd6YnQoKTsKICAgICAgICAgICAgICAgICAgICBzbGVlcF9zaig0MDAwKQogICAgICAgICAgICAgICAgICAgIHZhciBwbCA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS50ZXh0KCLmrKLov47lj5HooajkvaDnmoTop4LngrkiKS5maW5kT25lKDYwMDApOwogICAgICAgICAgICAgICAgICAgIHBsLmNsaWNrKCkKICAgICAgICAgICAgICAgICAgICBzbGVlcF9zaigxMDAwKQogICAgICAgICAgICAgICAgICAgIHNldFRleHQoIuaSuOi1t+iiluWtkOWKoOayueW5su+8gSIpOwogICAgICAgICAgICAgICAgICAgIHNsZWVwX3NqKDEwMDApCiAgICAgICAgICAgICAgICAgICAgdmFyIGZiID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5UZXh0VmlldyIpLnRleHQoIuWPkeW4gyIpLmZpbmRPbmUoNjAwMCk7CiAgICAgICAgICAgICAgICAgICAgZmIuY2xpY2soKTsKICAgICAgICAgICAgICAgICAgICBzbGVlcF9zaigxMDAwKQogICAgICAgICAgICAgICAgICAgIGNsaWNrX2xvZ3MoIuWIoOmZpCIpCiAgICAgICAgICAgICAgICAgICAgc2xlZXBfc2ooMTAwMCkKICAgICAgICAgICAgICAgICAgICAvL2NsaWNrKCLnoa7orqQiKQogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuQnV0dG9uIikudGV4dCgi56Gu6K6kIikuZmluZE9uZSg2MDAwKS5jbGljaygpOwogICAgICAgICAgICAgICAgICAgIHNsZWVwX3NqKDEwMDApCiAgICAgICAgICAgICAgICAgICAgLy8gYmFjaygpOwogICAgICAgICAgICAgICAgICAgIGZhbmh1aSgpOwogICAgICAgICAgICAgICAgICAgIC8vc2xlZXBfc2ooMjAwMCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHBscysrOwogICAgICAgICAgICB2YXIgYWEgPSBjbGFzc05hbWUoImFuZHJvaWQud2lkZ2V0Lkxpc3RWaWV3IikuZmluZCgpOwogICAgICAgICAgICBhYS5zY3JvbGxGb3J3YXJkKCk7CiAgICAgICAgICAgIC8vc3dpcGUoMTAwMCwgMTgwMCwgMTEwMCwgMTAwLCA2MDApOwogICAgICAgICAgICBzbGVlcF9zaigyMDAwKQoKICAgICAgICB9CiAgICAgICAgbG9nKCLnu5PmnZ866K+E6K665paH56ugIikKICAgICAgICBzbGVlcF9zaigxMDAwKQogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi6K+E6K665aSx6LSlIik7CiAgICAgICAgZmFuaHVpKCkgLy/ov5Tlm54KICAgIH0KfQoKLy805YiG5Lqr44CCCnlpamlhbnh1ZS7liIbkuqsgPSBmdW5jdGlvbigpIHsKICAgIHRyeSB7CiAgICAgICAgbG9nKCLlvIDlp4s65YiG5Lqr5paH56ugIik7CiAgICAgICAgc2xlZXBfc2ooMjAwMCk7CiAgICAgICAgdmFyIGZ4cyA9IDA7CiAgICAgICAgd2hpbGUgKGZ4cyA8IDUpIHsKICAgICAgICAgICAgaWYgKHRleHQoIuaSreaKpSIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgICAgICAvL3ZhciBib2JhbyA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS50ZXh0KCLmkq3miqUiKS5maW5kT25lKDYwMDApOwogICAgICAgICAgICAgICAgLy8gY2xpY2soYm9iYW8uYm91bmRzKCkuY2VudGVyWCgpIC0gMTUwLCBib2Jhby5ib3VuZHMoKS5jZW50ZXJZKCkgLSAxMDApOwogICAgICAgICAgICAgICAgLy9ib2Jhby5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5jbGljaygpOwogICAgICAgICAgICAgICAgd3pidCgpOwogICAgICAgICAgICAgICAgc2xlZXBfc2ooMjUwMCk7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IDM7IGkrKykgewogICAgICAgICAgICAgICAgICAgIGxvZygi56ysIiArIGkgKyAi5qyhIik7CiAgICAgICAgICAgICAgICAgICAgdmFyIHBsID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5UZXh0VmlldyIpLnRleHQoIuasoui/juWPkeihqOS9oOeahOingueCuSIpLmZpbmRPbmUoNjAwMCkucGFyZW50KCkuY2hpbGQoMyk7CiAgICAgICAgICAgICAgICAgICAgc2xlZXBfc2ooMzAwMCkKICAgICAgICAgICAgICAgICAgICBwbC5jbGljaygpOwogICAgICAgICAgICAgICAgICAgIHNsZWVwX3NqKDUwMDApCiAgICAgICAgICAgICAgICAgICAgLy9jbGFzc05hbWUoImFuZHJvaWQud2lkZ2V0LlRleHRWaWV3IikudGV4dCgi5YiG5Lqr5Yiw5a2m5Lmg5by65Zu9IikuZmluZE9uZSg2MDAwKS5wYXJlbnQoKS5jbGljaygpOwogICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuR3JpZFZpZXciKS5maW5kT25lKDYwMDApLmNoaWxkKDApLmNsaWNrKCk7CiAgICAgICAgICAgICAgICAgICAgLy8gIHZhciB4eCA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS50ZXh0KCLliIbkuqvliLDlrabkuaDlvLrlm70iKS5maW5kT25lKDYwMDApLnBhcmVudCgpLmJvdW5kcygpOwogICAgICAgICAgICAgICAgICAgIC8vICAgY2xpY2soeHguY2VudGVyWCgpLCB4eC5jZW50ZXJZKCkpOwogICAgICAgICAgICAgICAgICAgIC8vY2xpY2soIuWIhuS6q+WIsOWtpuS5oOW8uuWbvSIpOwogICAgICAgICAgICAgICAgICAgIHNsZWVwX3NqKDMwMDApCiAgICAgICAgICAgICAgICAgICAgYmFjaygpOwogICAgICAgICAgICAgICAgICAgIC8vIGZhbmh1aSgpOwogICAgICAgICAgICAgICAgICAgIHNsZWVwX3NqKDE1MDApCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBmeHMrKzsKICAgICAgICAgICAgLy8g5ruR5Yqo5bGP5bmV44CCCiAgICAgICAgICAgIHZhciBhYSA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuTGlzdFZpZXciKS5maW5kKCk7CiAgICAgICAgICAgIGFhLnNjcm9sbEZvcndhcmQoKTsKICAgICAgICAgICAgLy9zd2lwZSgxMDAwLCAxODAwLCAxMTAwLCAxMDAsIDYwMCk7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApCgogICAgICAgIH0KICAgICAgICAvLyBiYWNrKCk7CiAgICAgICAgZmFuaHVpKCk7CiAgICAgICAgbG9nKCLnu5PmnZ865YiG5Lqr5paH56ugIikKICAgICAgICAvLyAgc2xlZXBfc2ooMTAwMCkKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuWIhuS6q+Wksei0pSIpOwogICAgICAgIGZhbmh1aSgpIC8v6L+U5ZueCiAgICB9Cn0KCi8vNeaSreaUvuaWh+eroOOAggp5aWppYW54dWUu5paH5qyhID0gZnVuY3Rpb24oKSB7CiAgICB0cnkgewogICAgICAgIGxvZygi5byA5aeLOuaWh+eroOaSreaUviIpCiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAvL+WFiOa7keWKqOS4iemhtQogICAgICAgIHZhciBhYSA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuTGlzdFZpZXciKS5maW5kKCk7CiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCA0OyBpKyspIHsKICAgICAgICAgICAgYWEuc2Nyb2xsRm9yd2FyZCgpOwogICAgICAgICAgICBzbGVlcF9zaigyMDAwKTsKICAgICAgICB9CgogICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgNzsgaSsrKSB7CiAgICAgICAgICAgIGxvZygi56ysIiArIGkgKyAi5qyhIik7CiAgICAgICAgICAgIHZhciBib2JhbyA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS50ZXh0KCLmkq3miqUiKS5maW5kT25lKDMwMDApOwogICAgICAgICAgICBpZiAoYm9iYW8pIHsKICAgICAgICAgICAgICAgIGJvYmFvLmNsaWNrKCk7CiAgICAgICAgICAgICAgICB2YXIgYnQgPSBib2Jhby5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5jaGlsZCgwKS50ZXh0KCk7CiAgICAgICAgICAgICAgICBsb2coIuaSreaKpToiICsgYnQpCiAgICAgICAgICAgICAgICBzbGVlcF9zaigxNTAwMCk7IC8v5pKt5pS+5pe26ZW/44CCCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpLS0KICAgICAgICAgICAgfQogICAgICAgICAgICAvLyDmu5HliqjlsY/luZXjgIIKICAgICAgICAgICAgdmFyIGFhID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5MaXN0VmlldyIpLmZpbmQoKTsKICAgICAgICAgICAgYWEuc2Nyb2xsRm9yd2FyZCgpOwogICAgICAgICAgICAvL3N3aXBlKDEwMDAsIDE4MDAsIDExMDAsIDEwMCwgNjAwKTsKICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICB9CiAgICAgICAgLy/ngrnlh7vlrabkuaDjgIIKICAgICAgICBjbGFzc05hbWUoImFuZHJvaWQud2lkZ2V0LkZyYW1lTGF5b3V0IikuaWQoImhvbWVfYm90dG9tX3RhYl9idXR0b25fd29yayIpLmZpbmRPbmUoNjAwMCkuY2xpY2soKTsKICAgICAgICBsb2coIue7k+adnzrmlofnq6Dmkq3mlL4iKQogICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgbG9nKCLmlofnq6Dmkq3mlL7lpLHotKUiKTsKICAgIH0KfQoKLy825pKt5pS+6KeG6aKR44CCCnlpamlhbnh1ZS7op4bmrKEgPSBmdW5jdGlvbigpIHsKICAgIHRyeSB7CiAgICAgICAgbG9nKCLlvIDlp4s65pKt5pS+6KeG6aKRIikKICAgICAgICBzbGVlcF9zaigyMDAwKTsKICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IDc7IGkrKykgewogICAgICAgICAgICBsb2coIuesrCIgKyBpICsgIuasoeaSreaUviIpOwogICAgICAgICAgICBjbGlja19sb2dzKCLnmb7ngbUiKTsKICAgICAgICAgICAgc2xlZXBfc2ooMzAwMCk7CiAgICAgICAgICAgIHZhciBzcCA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuTGlzdFZpZXciKS5maW5kKCk7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBzcFsxXS5jaGlsZCgxKS5jaGlsZCgxKS5jaGlsZCgwKS5jbGljaygpOwogICAgICAgICAgICAgICAgbG9nKCIxIiArIHNwWzFdLmNoaWxkKDEpLmNoaWxkKDEpLmNoaWxkKDEpLmNoaWxkKDApLnRleHQoKSk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgIHNwWzJdLmNoaWxkKDEpLmNoaWxkKDEpLmNoaWxkKDApLmNsaWNrKCk7CiAgICAgICAgICAgICAgICBsb2coIjIiICsgc3BbMl0uY2hpbGQoMSkuY2hpbGQoMSkuY2hpbGQoMSkuY2hpbGQoMCkudGV4dCgpKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBzbGVlcF9zaigxNTAwMCk7IC8v5pKt5pS+5pe26ZW/44CCICAKICAgICAgICAgICAgYmFjaygpOwogICAgICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgICAgICAvLyAgIHN3aXBlKDUwMCwgMTYwMCwgNTAwLCAzMDAsIDYwMCk7IC8v5ruR5Yqo5bGP5bmV44CCCiAgICAgICAgfQogICAgICAgIC8vICBzbGVlcF9zaigyMDAwKQogICAgICAgIC8vICBiYWNrKCk7CiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAvL+eCueWHu+WtpuS5oOOAggogICAgICAgIGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuRnJhbWVMYXlvdXQiKS5pZCgiaG9tZV9ib3R0b21fdGFiX2J1dHRvbl93b3JrIikuZmluZE9uZSg2MDAwKS5jbGljaygpOwogICAgICAgIGxvZygi57uT5p2fOuinhumikeaSreaUviIpCiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuinhumikeaSreaUvuWksei0pSIpOwogICAgICAgIGZhbmh1aSgpIC8v6L+U5ZueCiAgICB9Cn0KCi8vN+aWh+eroOaXtumVvwp5aWppYW54dWUu5paH6ZW/ID0gZnVuY3Rpb24oKSB7CiAgICB0cnkgewogICAgICAgIGxvZygi5byA5aeLOuaWh+eroOaXtumVvyIpCiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICB2YXIgd3pzY3MgPSAwOwogICAgICAgIHdoaWxlICh3enNjcyA8IDUpIHsKICAgICAgICAgICAgaWYgKHRleHQoIuaSreaKpSIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgICAgICAvLyB2YXIgYm9iYW8gPSBjbGFzc05hbWUoImFuZHJvaWQud2lkZ2V0LlRleHRWaWV3IikudGV4dCgi5pKt5oqlIikuZmluZE9uZSg2MDAwKTsKICAgICAgICAgICAgICAgIC8vIGNsaWNrKGJvYmFvLmJvdW5kcygpLmNlbnRlclgoKSAtIDE1MCwgYm9iYW8uYm91bmRzKCkuY2VudGVyWSgpIC0gMTAwKTsKICAgICAgICAgICAgICAgIC8vIGJvYmFvLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLmNsaWNrKCk7CiAgICAgICAgICAgICAgICB3emJ0KCk7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMzY7IGkgPj0gMTsgaS0tKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIG0gPSBpICogMTAKICAgICAgICAgICAgICAgICAgICBsb2coIuingueci+WAkuiuoeaXtjrliankvZkiICsgbSArICLnp5IiKTsKICAgICAgICAgICAgICAgICAgICBzbGVlcCgxMDAwMCkKICAgICAgICAgICAgICAgICAgICAvL3N3aXBlKDEwMDAsIDE4MDAsIDExMDAsIDEwMCwgNjAwKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHd6c2NzKys7CiAgICAgICAgICAgIHZhciBhYSA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuTGlzdFZpZXciKS5maW5kKCk7CiAgICAgICAgICAgIGFhLnNjcm9sbEZvcndhcmQoKTsKICAgICAgICAgICAgLy9zd2lwZSgxMDAwLCAxODAwLCAxMTAwLCAxMDAsIDYwMCk7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAgfQogICAgICAgIC8vIGJhY2soKTsKICAgICAgICBmYW5odWkoKTsKICAgICAgICBsb2coIue7k+adnzrml7bplb/ov5DooYznu5PmnZ8iKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuaWh+eroOaSreaUvuaXtumVv+Wksei0pSIpOwogICAgICAgIGZhbmh1aSgpOyAvL+i/lOWbngogICAgfQp9CgovLzjmiZPlvIDnlLXlj7DjgIIKeWlqaWFueHVlLuinhumVvyA9IGZ1bmN0aW9uKCkgewogICAgdHJ5IHsKICAgICAgICBsb2coIuW8gOWnizrnlLXlj7Dmkq3mlL4iKQogICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAgY2xpY2tfbG9ncygi55S15Y+wIik7CiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBjbGlja19sb2dzKCLlkKzlub/mkq0iKTsKICAgICAgICBzbGVlcF9zaigzMDAwKQogICAgICAgIGlmICh0ZXh0Q29udGFpbnMoIuaUtuWQrCIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgIGNsaWNrX2xvZ3MoIuaUtuWQrCIpOwogICAgICAgICAgICBjb25zb2xlLmxvZygi5q2j5Zyo5pS25ZCs5bm/5pKtLi4uIik7CiAgICAgICAgICAgIHNsZWVwX3NqKDI1MDApCiAgICAgICAgICAgIC8vIGJhY2soKTsgLy/ov5Tlm57nlLXlj7DnlYzpnaIKICAgICAgICAgICAgZmFuaHVpKCkgLy/ov5Tlm54KICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICB9CiAgICAgICAgY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5GcmFtZUxheW91dCIpLmlkKCJob21lX2JvdHRvbV90YWJfYnV0dG9uX3dvcmsiKS5maW5kT25lKDYwMDApLmNsaWNrKCk7CiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBjbGlja19sb2dzKCLmjqjojZAiKTsKICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi55S15Y+w5pe26ZW/5aSx6LSlIik7CiAgICAgICAgZmFuaHVpKCk7IC8v6L+U5ZueCiAgICB9Cn0KCi8vOeW8uuWItuWFs+mXreOAggp5aWppYW54dWUu5YWz6ZetYXBwID0gZnVuY3Rpb24oKSB7CiAgICB0cnkgewogICAgICAgIGxvZygi5byA5aeLOuW8uuWItuWFs+mXrSIpOwogICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAgb3BlbkFwcFNldHRpbmcoZ2V0UGFja2FnZU5hbWUoIuWtpuS5oOW8uuWbvSIpKTsKICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgIGlkKCJyaWdodF9idXR0b24iKS5maW5kT25lKDYwMDApLmNsaWNrKCk7CiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBjbGlja19sb2dzKCLlvLrooYzlgZzmraIiKQogICAgICAgIGNsaWNrX2xvZ3MoIue7kyIpCiAgICAgICAgY2xpY2tfbG9ncygi6KGMIikKICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgIGNsaWNrX2xvZ3MoIuehriIpCiAgICAgICAgc2xlZXBfc2ooMjAwMCk7CiAgICAgICAgYmFjaygpOwogICAgICAgIGxvZygi57uT5p2fOuW3suW8uuWItuWFs+mXrSIpOwogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi5by65Yi25YWz6Zet5aSx6LSlIik7CiAgICAgICAgLy9mYW5odWkoKS8v6L+U5ZueCiAgICB9Cn0KCi8vMTDkuonkuIrmuLjjgIIKeWlqaWFueHVlLuS6ieS4iiA9IGZ1bmN0aW9uKCkgewogICAgdmFyIHpzc3MgPSAxOwogICAgd2hpbGUgKHpzc3MgPCAzKSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbG9nKCLlvIDlp4s65LqJ5LiK5ri4562U6aKYIik7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApOwogICAgICAgICAgICBkYXRpeWVtaWFuKDgpOwogICAgICAgICAgICBzbGVlcF9zaigyMDAwKTsKICAgICAgICAgICAgY2xpY2tfbG9ncygi5byA5aeL5q+U6LWbIik7CiAgICAgICAgICAgIHNsZWVwKDMwMDApOwogICAgICAgICAgICAvL+S6ieS4iua4uCAgICAgICAKICAgICAgICAgICAgenN5bWFpbnMoKTsKICAgICAgICAgICAgc2xlZXBfc2ooMTAwMCk7CiAgICAgICAgICAgIGZhbmh1aSgpOyAvL+i/lOWbngogICAgICAgICAgICBsb2coIue7k+adnzrkuonkuIrmuLjnrZTpopjlrozmr5UiKTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGxvZygi5LqJ5LiK5ri4562U6aKY5aSx6LSlIik7CiAgICAgICAgICAgIGZhbmh1aSgpOyAvL+i/lOWbngogICAgICAgIH0KICAgICAgICB6c3NzKys7CiAgICB9Cn0KCi8vMTHlj4zkurrlr7nmiJjjgIIKeWlqaWFueHVlLuWPjOS6uiA9IGZ1bmN0aW9uKCkgewogICAgdHJ5IHsKICAgICAgICBsb2coIuW8gOWnizrlj4zkurrlr7nmiJjnrZTpopgiKTsKICAgICAgICBzbGVlcF9zaigyMDAwKTsKICAgICAgICBkYXRpeWVtaWFuKDkpOwogICAgICAgIHNsZWVwX3NqKDIwMDApOwogICAgICAgIHZhciB5cWRzID0gdGV4dCgi6ZqP5py65Yy56YWNIikuZmluZE9uZSg2MDAwKTsKICAgICAgICB5cWRzLnBhcmVudCgpLmNoaWxkKDApLmNsaWNrKCk7CiAgICAgICAgc2xlZXBfc2ooMjAwMCk7CiAgICAgICAgY2xpY2tfbG9ncygi5byA5aeL5a+55oiYIik7CiAgICAgICAgc2xlZXAoMzAwMCk7CiAgICAgICAgLy/lr7nkurrlr7nmiJggICAgICAgCiAgICAgICAgenN5bWFpbnMoKTsKICAgICAgICBzbGVlcF9zaigxMDAwKTsKICAgICAgICBmYW5odWkoKTsgLy/ov5Tlm54KICAgICAgICBsb2coIue7k+adnzrlj4zkurrlr7nmiJjnrZTpopjlrozmr5UiKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuWPjOS6uuWvueaImOWksei0pSIpOwogICAgICAgIGZhbmh1aSgpOyAvL+i/lOWbngogICAgfQp9CgovLzEy5oyR5oiY562U6aKY44CCCnlpamlhbnh1ZS7mjJHmiJggPSBmdW5jdGlvbigpIHsKICAgIHRyeSB7CiAgICAgICAgbG9nKCLlvIDlp4s65oyR5oiY562U6aKYIik7CiAgICAgICAgZGF0aXllbWlhbigxMCk7CiAgICAgICAgc2xlZXBfc2ooMjAwMCk7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAyMDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChpIDwgNikgewogICAgICAgICAgICAgICAgLy/mjJHmiJjnrZTpopgKICAgICAgICAgICAgICAgIG1haW5zKCk7CiAgICAgICAgICAgICAgICBzbGVlcF9zaigzMDAwKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGxvZygi6ZqP5L6/54K55LiA5LiqIik7CiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oIumaj+S+v+eCueS4gOS4qiIpOwogICAgICAgICAgICAgICAgdmFyIGFhID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5MaXN0VmlldyIpLmZpbmRPbmUoNjAwMCk7IC8v5oyR5oiY6YCJ6aG544CCCiAgICAgICAgICAgICAgICBhYS5jaGlsZCgwKS5jaGlsZCgwKS5jaGlsZCgwKS5jbGljaygpOwogICAgICAgICAgICAgICAgc2xlZXBfc2ooNjAwMCkKICAgICAgICAgICAgICAgIGlmICh0ZXh0KCLnu5PmnZ/mnKzlsYAiKS5leGlzdHMoKSkgewogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGV4dCgi5YiG5Lqr5bCx6IO95aSN5rS7IikuZXhpc3RzKCkpIHsKICAgICAgICAgICAgICAgIHNsZWVwX3NqKDEwMDApOwogICAgICAgICAgICAgICAgY2xpY2tfbG9ncygi5YiG5Lqr5bCx6IO95aSN5rS7Iik7CiAgICAgICAgICAgICAgICBzbGVlcF9zaigzMDAwKTsKICAgICAgICAgICAgICAgIGJhY2soKTsKICAgICAgICAgICAgICAgIHNsZWVwX3NqKDMwMDApOwoKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKHRleHQoIuWGjeadpeS4gOWxgCIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBzbGVlcF9zaigxMDAwKTsKICAgICAgICBmYW5odWkoKTsgLy/ov5Tlm54KICAgICAgICBsb2coIue7k+adnzrmjJHmiJjnrZTpopjlrozmr5UiKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuaMkeaImOetlOmimOWksei0pSIpOwogICAgICAgIGZhbmh1aSgpOyAvL+i/lOWbngogICAgfQoKfQoKLy8xM+avj+aXpeetlOmimOOAggp5aWppYW54dWUu5q+P5pelID0gZnVuY3Rpb24oKSB7CiAgICB2YXIgbXNzcyA9IDE7CiAgICB3aGlsZSAobXNzcyA8IDMpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBsb2coIuW8gOWnizrmr4/ml6XnrZTpopgiKTsKICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAgICAgZGF0aXllbWlhbigyKTsKICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCk7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgaSsrKSB7CiAgICAgICAgICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgICAgICAgICAgaWYgKHRleHQoIuWkmumAiemimCIpLmV4aXN0cygpIHx8IHRleHQoIuWNlemAiemimCIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgICAgICAgICAgbG9nKGkgKyAiPj7pgInmi6npopgiKQogICAgICAgICAgICAgICAgICAgIHh1YW54aWFuZygpOwogICAgICAgICAgICAgICAgICAgIHNsZWVwX3NqKDEwMDApOwogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOyAvL+i3s+WHuuWNleasoeW+queOr+OAggogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAgICAgICAgIGlmICh0ZXh0KCLloavnqbrpopgiKS5leGlzdHMoKSkgewogICAgICAgICAgICAgICAgICAgIGxvZyhpICsgIj4+5aGr56m66aKYIikKICAgICAgICAgICAgICAgICAgICB0a3QoKTsKICAgICAgICAgICAgICAgICAgICBzbGVlcF9zaigxMDAwKTsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsgLy/ot7Plh7rljZXmrKHlvqrnjq/jgIIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBjbGlja19sb2dzKCLlrozmiJAiKQogICAgICAgICAgICBzbGVlcF9zaigzMDAwKTsKICAgICAgICAgICAgZmFuaHVpKCk7IC8v6L+U5ZueCiAgICAgICAgICAgIGxvZygi57uT5p2fOuavj+aXpeetlOmimOWujOavlSIpOwogICAgICAgICAgICAvLyB9CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICBsb2coIuavj+aXpeetlOmimOWksei0pSIpOwogICAgICAgICAgICBmYW5odWkoKTsgLy/ov5Tlm54KICAgICAgICB9CiAgICAgICAgbXNzcysrOwogICAgfQp9CgoKCi8vMemAieaLqemimOafpeeci+aPkOekuuOAggpmdW5jdGlvbiB0aXNoaXMoKSB7CiAgICBzbGVlcF9zaigyMDAwKQogICAgY2xpY2tfbG9ncygi5p+l55yL5o+Q56S6IikKICAgIHNsZWVwX3NqKDIwMDApCiAgICBpZiAodGV4dCgi5o+Q56S6IikuZXhpc3RzKCkpIHsKICAgICAgICB2YXIgYWEgPSBjbGFzc05hbWUoImFuZHJvaWQudmlldy5WaWV3IikudGV4dCgi5o+Q56S6IikuZmluZE9uZSg2MDAwKS5wYXJlbnQoKS5wYXJlbnQoKS5jaGlsZCgxKS5jaGlsZCgwKTsKICAgICAgICB2YXIgYmIgPSBhYS50ZXh0KCkKICAgICAgICBsb2coIuKRoOaPkOekujoiICsgYmIpCiAgICB9CiAgICBzbGVlcF9zaigxMDAwKQogICAgYmFjaygpOwogICAgcmV0dXJuIGJiCn0KCgovLzLpgInmi6npopjngrnlh7vjgIIKZnVuY3Rpb24geHVhbnhpYW5nKCkgewogICAgc2xlZXBfc2ooMjAwMCkKICAgIHZhciB0aXNoaXRpcyA9IHRpc2hpcygpIC8v5p+l55yL5o+Q56S644CCCiAgICB2YXIgeHggPSBbIkEuIiwgIkIuIiwgIkMuIiwgIkQuIiwgIkUuIl0KICAgIHZhciBrYiA9IFtdCiAgICB2YXIga2IxID0gW10KICAgIGZvciAodmFyIGkgPSAwOyBpIDwgeHgubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgeHhzID0geHhbaV0KICAgICAgICBpZiAodGV4dENvbnRhaW5zKHh4cykuZXhpc3RzKCkpIHsKICAgICAgICAgICAga2IxLnB1c2goMSkKICAgICAgICAgICAgdmFyIGFhID0gdGV4dENvbnRhaW5zKHh4cykuZmluZE9uZSg2MDAwKS5wYXJlbnQoKQogICAgICAgICAgICB2YXIgYmIgPSBhYS5jaGlsZCgyKS50ZXh0KCkKICAgICAgICAgICAgLy8gIHZhciBjYyA9IGJiLnJlcGxhY2UoL1teXHU0ZTAwLVx1OWZhNV0vZywgIiIpOwogICAgICAgICAgICBpZiAodGlzaGl0aXMubGFzdEluZGV4T2YoYmIpID49IDApIHsKICAgICAgICAgICAgICAgIGxvZygi4pGh5q2j56Gu6YCJ6aG5OiIgKyB4eFtpXSArIGJiKQogICAgICAgICAgICAgICAgYWEuY2xpY2soKTsKICAgICAgICAgICAgICAgIHNsZWVwX3NqKDEwMDApOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAga2IucHVzaCgxKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgLy8gbG9nKGtiLmxlbmd0aCArICI6IiArIGtiMS5sZW5ndGgpCiAgICBpZiAoa2IubGVuZ3RoID09IGtiMS5sZW5ndGgpIHsKICAgICAgICBsb2coIuayoeaJvuWIsCzpmo/kvr/ngrnkuIDkuKoiKQogICAgICAgIHZhciB4eHNzID0gWyJBLiIsICJCLiIsICJDLiIsICJELiIsICJFLiJdCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB4eHNzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgIHZhciB4eHNzcyA9IHh4c3Nbal0KICAgICAgICAgICAgaWYgKHRleHRDb250YWlucyh4eHNzcykuZXhpc3RzKCkpIHsKICAgICAgICAgICAgICAgIHZhciBhYXMgPSB0ZXh0Q29udGFpbnMoeHhzc3MpLmZpbmRPbmUoNjAwMCkucGFyZW50KCkKICAgICAgICAgICAgICAgIGFhcy5jbGljaygpOwogICAgICAgICAgICAgICAgc2xlZXBfc2ooMTAwMCkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIHNsZWVwX3NqKDIwMDApCiAgICBjbGlja19sb2dzKCLnoa7lrpoiKQogICAgc2xlZXBfc2ooMjAwMCkKICAgIGNsaWNrX2xvZ3MoIuS4i+S4gOmimCIpCn0KCi8vM+Whq+epuumimOetlOahiOafpeeci+aPkOekugpmdW5jdGlvbiB0aXNoaSgpIHsKICAgIHNsZWVwX3NqKDIwMDApCiAgICBjbGlja19sb2dzKCLmn6XnnIvmj5DnpLoiKQogICAgLy8gIHNsZWVwX3NqKDIwMDApCiAgICBpZiAoIXRleHQoIuivt+ingueci+inhumikSIpLmV4aXN0cygpKSB7CiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBpZiAodGV4dCgi5o+Q56S6IikuZXhpc3RzKCkpIHsKICAgICAgICAgICAgdmFyIGFhID0gY2xhc3NOYW1lKCJhbmRyb2lkLnZpZXcuVmlldyIpLnRleHQoIuaPkOekuiIpLmZpbmRPbmUoNjAwMCkucGFyZW50KCkucGFyZW50KCkuY2hpbGQoMSkuY2hpbGQoMCk7CiAgICAgICAgICAgIHZhciB0c19saXN0ID0gYWEudGV4dCgpCiAgICAgICAgICAgIGxvZygi4pGg5o+Q56S6OiIgKyB0c19saXN0KQogICAgICAgIH0KICAgICAgICB2YXIgdHNfbGlzdHMgPSB0c19saXN0LnJlcGxhY2UoL1teXHU0ZTAwLVx1OWZhNV0vZywgIiIpOyAvLwogICAgICAgIHNsZWVwX3NqKDEwMDApCiAgICAgICAgYmFjaygpOwogICAgfSBlbHNlIHsKICAgICAgICBzbGVlcF9zaigxMDAwKQogICAgICAgIHZhciB0c19saXN0cyA9ICLlsYEiCiAgICAgICAgYmFjaygpOwoKICAgIH0KICAgIHJldHVybiB0c19saXN0cwp9CgovLzTloavnqbrpopjngrnlh7vjgIIKZnVuY3Rpb24gdGt0KCkgewogICAgc2xlZXBfc2ooMjAwMCkKICAgIHZhciB0aXNoaXRpID0gdGlzaGkoKSAvL+afpeeci+aPkOekuuOAggogICAgaWYgKHRleHQoIuWhq+epuumimCIpLmV4aXN0cygpKSB7CiAgICAgICAgdmFyIHRtID0gY2xhc3NOYW1lKCJhbmRyb2lkLnZpZXcuVmlldyIpLnRleHQoIuWhq+epuumimCIpLmZpbmRPbmUoNjAwMCkucGFyZW50KCkucGFyZW50KCkuY2hpbGQoMSkKICAgICAgICB2YXIgYWEgPSB0bS5jaGlsZCgwKS50ZXh0KCkKICAgICAgICBsb2coIuKRoemXrumimDoiICsgYWEpCiAgICAgICAgdmFyIGtrcyA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuRWRpdFRleHQiKS5maW5kT25lKCkucGFyZW50KCkuY2hpbGQoMSkKICAgIH0KICAgIHRyeSB7CiAgICAgICAgaWYgKHRpc2hpdGkgIT0gIuWxgSIpIHsKICAgICAgICAgICAgdmFyIGFhcyA9IGFhLnJlcGxhY2UoL1teXHU0ZTAwLVx1OWZhNV0vZywgIiIpOyAvL+mXrumimOaVtOeQhuOAggogICAgICAgICAgICB2YXIgeHd0ID0gYWFzLnNsaWNlKGFhcy5sZW5ndGggLSA1KSAvL+mXrumimOiOt+WPluWQjjXkuKrlrZfjgIIKICAgICAgICAgICAgdmFyIHRzID0gdGlzaGl0aS5sYXN0SW5kZXhPZih4d3QpIC8v5Yy56YWN5pyA5ZCO5YWz6ZSu5a2X55qE6ZW/5bqm44CCCiAgICAgICAgICAgIHZhciBzciA9IHRpc2hpdGkuc2xpY2UodHMgKyA1KTsgLy/liIflh7rnrZTmoYjjgIIKICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAgICAga2tzLmNsaWNrKCk7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAgICAgIHNldFRleHQoc3IgKyB0aXNoaXRpICsgIuaIkeS4jeS8miIpOyAvL+i+k+WFpeetlOahiOOAggogICAgICAgICAgICBsb2coIuKRoumXrumimOetlOahiDoiICsgc3Iuc2xpY2UoMCwgMTApKTsgLy/liIflh7rnrZTmoYjjgIIKCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICAgICAga2tzLmNsaWNrKCk7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAgICAgIHNldFRleHQoIui/meS4qumimOaIkeS4jeS8miIpOyAvL+i+k+WFpeetlOahiOOAggogICAgICAgIH0KICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgIGNsaWNrX2xvZ3MoIuehruWumiIpCiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBjbGlja19sb2dzKCLkuIvkuIDpopgiKQogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZyhlKQogICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAga2tzLmNsaWNrKCk7CiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBzZXRUZXh0KCLlvZXlhaXplJnor68iKTsgLy/ovpPlhaXnrZTmoYjjgIIKICAgICAgICBzbGVlcF9zaigyMDAwKQogICAgICAgIGNsaWNrX2xvZ3MoIuehruWumiIpCiAgICAgICAgc2xlZXBfc2ooMjAwMCkKICAgICAgICBjbGlja19sb2dzKCLkuIvkuIDpopgiKQogICAgfQp9CgovLzHmiZPlvIDpopjlupPjgIIKZnVuY3Rpb24gdGlrdV8yKHRpa3VlcykgewogICAgdHJ5IHsKICAgICAgICB2YXIgdGlrdWJsID0gdGlrdWVzCiAgICAgICAgdmFyIGZpbGUgPSBvcGVuKHRpa3VibCwgInIiLCAidXRmLTgiKTsgLy/or7vlj5bmlofku7bnmoTmiYDmnInlhoXlrrkKICAgICAgICB2YXIgdGV4dCA9IGZpbGUucmVhZCgpOwogICAgICAgIHZhciB5dGV4dCA9IHRleHQuc2xpY2UoMCwgMykKICAgICAgICBpZiAoeXRleHQuaW5kZXhPZigiWyIpKSB7CiAgICAgICAgICAgIHZhciBxdWtvbmdnZSA9IHRleHQucmVwbGFjZSgvXHMvZywgIiIpOwogICAgICAgICAgICBpZiAocXVrb25nZ2UubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdmFyIHRleHRzID0gcXVrb25nZ2Uuc2xpY2UoMCwgdGV4dC5sZW5ndGggLSAxKTsKICAgICAgICAgICAgICAgIHZhciBhc3MgPSAiWyIgKyB0ZXh0cyArICJdIjsKICAgICAgICAgICAgICAgIHZhciB6aWRpYW5zID0gZXZhbCgnKCcgKyBhc3MgKyAnKScpOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIHppZGlhbnMgPSBldmFsKCcoJyArIHRleHQgKyAnKScpOwogICAgICAgIH0KICAgICAgICBmaWxlLmNsb3NlKCk7CiAgICAgICAgcmV0dXJuIHppZGlhbnM7CgogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi5aSH5Lu96aKY5bqT5omT5byA5aSx6LSlIik7CiAgICB9Cn0KCi8vMS4y6I635Y+W6Zeu6aKY44CCCmZ1bmN0aW9uIGh1b3F1d2VudGkoKSB7CiAgICB0cnkgewogICAgICAgIGxvZygi4pGg5bey54K5562U6aKY5oyJ6ZSuIikKICAgICAgICBkbyB7CiAgICAgICAgICAgIGxvZygi6K+75Y+W6Zeu6aKY5Lit4oCm4oCmIik7CiAgICAgICAgICAgIHNsZWVwKDEwMCk7CiAgICAgICAgICAgIHZhciB0aSA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuTGlzdFZpZXciKS5maW5kT25lKDIwMDAwKTsKICAgICAgICAgICAgdmFyIHRpcyA9IHRpLnBhcmVudCgpLmNoaWxkKDApLnRleHQoKTsKICAgICAgICB9CiAgICAgICAgd2hpbGUgKCF0aXMpOwogICAgICAgIHZhciB0aXMxID0gdGlzLnJlcGxhY2UoL1teMC05Xlx1NGUwMC1cdTlmYTVdL2csICIiKTsKICAgICAgICByZXR1cm4gW3RpcywgdGlzMV0KICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIumXrumimOmUmeivryIpOwogICAgfQp9CgovLzEuM+mXrumimOWMuemFjeOAgi0tLS0tLei/lOWbnue7k+aenDrljLnphY3lrZflhbjnrZTmoYjnu5PmnpzjgIIKZnVuY3Rpb24gd2VudGlfcHAoemlkaWFucywgcWllcGFuc3MpIHsKICAgIHRyeSB7CiAgICAgICAgdmFyIHppZGlhbiA9IHppZGlhbnM7IC8v5omT5byA6aKY5bqT44CCCiAgICAgICAgdmFyIHFpZXBhbmVzcyA9IHFpZXBhbnNzOyAvL+iOt+WPlueahOmXrumimOOAggogICAgICAgIHZhciBqaWUgPSBbXTsgLy/lu7rnqbrliJfooags5pS+57uT5p6cCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB6aWRpYW4ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdmFyIHRpID0gemlkaWFuW2ldLndlbnRpOwogICAgICAgICAgICB2YXIgdGlzID0gdGkucmVwbGFjZSgvW14wLTleXHU0ZTAwLVx1OWZhNV0vZywgIiIpOyAvL+Wtl+WFuOWPquS/neeVmeaxieWtl+OAgiAgICAgICAgICAgICAKICAgICAgICAgICAgdmFyIGppZWd1byA9IHRpcy5pbmRleE9mKHFpZXBhbmVzcyk7IC8v6Zeu6aKY5Yy56YWN562b6YCJ44CCCiAgICAgICAgICAgIGlmIChqaWVndW8gPj0gMCkgewogICAgICAgICAgICAgICAgdmFyIGppZXNsaXN0ID0gemlkaWFuW2ldOwogICAgICAgICAgICAgICAgdmFyIGppZXMgPSBqaWVzbGlzdC5kYWFuOwogICAgICAgICAgICAgICAgdmFyIGppZXNfMSA9IGppZXMucmVwbGFjZSgvXHN8XltBLURdW1wuXOOAgV0vaWcsICIiKTsgLy/lrZflhbjnrZTmoYjlj6rkv53nlZnmsYnlrZflkozmlbDlrZfjgIIKICAgICAgICAgICAgICAgIHZhciBqaWVzXzIgPSAi44CQIiArIGppZXNfMSArICLjgJEiOyAvL+WKoOS4iuS4reaLrOWPt++8jOaPkOmrmOWHhuehruW6puOAggogICAgICAgICAgICAgICAgamllLnB1c2goamllc18yKTsgLy/nu5PmnpzmlL7lhaXliJfooajjgIIKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoamllID09IGZhbHNlKSB7CiAgICAgICAgICAgIGRldmljZS52aWJyYXRlKDMwMCk7CiAgICAgICAgfQogICAgICAgIHZhciBkYWFuID0gamllLnRvU3RyaW5nKCk7IC8v6L2s5oiQ5a2X56ym5Liy44CCICAgIAogICAgICAgIGxvZygi4pGi562U5qGIOj4+IiArIGRhYW4uc2xpY2UoMCwgNTApICsgIjw8IiArIGppZS5sZW5ndGggKyAi5LiqIik7IC8v5Yy56YWN5a2X5YW4562U5qGI57uT5p6c44CCCiAgICAgICAgcmV0dXJuIGRhYW47IC8v6L+U5Zue5Yy56YWN5a2X5YW4562U5qGI57uT5p6c44CCCiAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgbG9nKCLpl67popjljLnphY3plJnor68iKTsKICAgIH0KfQoKLy8xLjTpgJrov4fpgInpobnngrnlh7stLeWMuemFjeWtl+WFuOetlOahiOe7k+aenCzljLnphY3pgInpobks54K55Ye744CCCmZ1bmN0aW9uIGRpYW5qaSh0aXNzKSB7CiAgICB0cnkgewogICAgICAgIHZhciB4dXhpYW5nID0gW10KICAgICAgICB2YXIgcGRkaiA9IDAKICAgICAgICBpZiAoY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5MaXN0VmlldyIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgIHZhciBhYSA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuTGlzdFZpZXciKS5maW5kT25lKDEwMDAwKTsgLy/mjJHmiJjpgInpobnjgIIKICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhYS5jaGlsZENvdW50KCk7IGkrKykgewogICAgICAgICAgICAgICAgdmFyIHh4cyA9IGFhLmNoaWxkKGkpLmNoaWxkKDApLmNoaWxkKDEpOwogICAgICAgICAgICAgICAgdmFyIHh1YW54ID0geHhzLnRleHQoKTsgLy/pgInpobkKICAgICAgICAgICAgICAgIHh1eGlhbmcucHVzaCh4dWFueCk7CiAgICAgICAgICAgICAgICB2YXIgeHVhbnhfMSA9IHh1YW54LnJlcGxhY2UoL1xzfF5bQS1EXVtcLlzjgIFdL2lnLCAiIik7IC8v6YCJ6aG55Y+q5L+d55WZ5rGJ5a2X5ZKM5pWw5a2X44CCCiAgICAgICAgICAgICAgICB2YXIgeHVhbnhfMiA9ICLjgJAiICsgeHVhbnhfMSArICLjgJEiOyAvL+a3u+WKoOS4reaLrOWPt++8jOaPkOmrmOeyvuehruW6puOAggogICAgICAgICAgICAgICAgbG9nKHh1YW54XzIpOwogICAgICAgICAgICAgICAgdmFyIGppZWd1byA9IHRpc3Muc2VhcmNoKHh1YW54XzIpOyAvL+WMuemFjemAiemhueetm+mAiee7k+aenOOAggogICAgICAgICAgICAgICAgaWYgKGppZWd1byA+PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgYWEuY2hpbGQoaSkuY2hpbGQoMCkuY2hpbGQoMCkuY2xpY2soKTsKICAgICAgICAgICAgICAgICAgICB2YXIgZGFzcyA9IGFhLmNoaWxkKGkpLmNoaWxkKDApLmNoaWxkKDEpLnRleHQoKTsKICAgICAgICAgICAgICAgICAgICBjbGlja19sb2dzKHh1YW54KQogICAgICAgICAgICAgICAgICAgIGxvZygi4pGj5q2k6L2u54K55Ye75a6M5oiQIik7CiAgICAgICAgICAgICAgICAgICAgcGRkaisrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChwZGRqID09IDApIHsKICAgICAgICAgICAgICAgIGxvZygi5rKh5om+5Yiw77yM6ZqP5L6/54K55LiA5LiqIik7CiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oIuayoeaJvuWIsO+8jOmaj+S+v+eCueS4gOS4qiIpOwogICAgICAgICAgICAgICAgYWEuY2hpbGQoMCkuY2hpbGQoMCkuY2hpbGQoMCkuY2xpY2soKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBsb2coIumAiemhuToiICsgeHV4aWFuZykKCiAgICAgICAgICAgIHJldHVybiBkYXNzCiAgICAgICAgfQogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi54K55Ye76ZSZ6K+vIik7CiAgICB9Cn0KCgoKLy8tLS0tLS0tLS0tLS0tLS0t5Li75Ye95pWwLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8yLjHmjJHmiJjnrZTpopjvvIzljLnphY3kuLvlh73mlbDjgIItLQpmdW5jdGlvbiBtYWlucygpIHsKICAgIHRyeSB7CiAgICAgICAgdmFyIGRhdGUxID0gbmV3IERhdGUoKTsgLy/mnoTpgKDml7bpl7Tlh73mlbAKICAgICAgICB2YXIgaHF3dCA9IGh1b3F1d2VudGkoKTsgLy8x6I635Y+W5Lik5Liq5a2X44CCW+acquaVtOeQhuWSjOaVtOeQhueahOmXrumimHBdCiAgICAgICAgdmFyIGhxd3RzID0gaHF3dFsxXS5zbGljZSgyLCAzMCk7IC8v5oiq5Y+W5pW055CG5ZCO6Zeu6aKY5a2X5pWw44CCCiAgICAgICAgLy8gbG9nKGhxd3RzKQogICAgICAgIGxvZygi4pGh6aKY55uuOiIgKyBocXd0WzBdKQogICAgICAgIHZhciBkYSA9IHdlbnRpX3BwKHRpa3VzLCBocXd0cyk7IC8vMumimOW6k+WSjOmXrumimCzljLnphY3jgIIgICAgICAgCiAgICAgICAgdmFyIGRhYW5zID0gZGlhbmppKGRhKTsgLy8z54K55Ye744CCICAgICAgICAgICAgICAgCiAgICAgICAgdmFyIGRhdGUyID0gbmV3IERhdGUoKTsgLy/mnoTpgKDlh73mlbAKICAgICAgICBsb2coKGRhdGUyIC0gZGF0ZTEpIC8gMTAwMCArICLnp5ItLS0tLS0tLS0tLS0tLS0tLS0tLSIpCiAgICAgICAgLy8gbG9nKCItLS0tLS0tLS0tLS0tLS0tLS0tLSIpCiAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgbG9nKCLlrozmiJDnrZTpopjvvIEiKTsKICAgIH0KfQoKLy8yLjHkuonkuIrmuLjlkozlr7nmiJjnrZTpopjvvIzljLnphY3kuLvlh73mlbDjgIItLQpmdW5jdGlvbiB6c3ltYWlucygpIHsKICAgIHRyeSB7CiAgICAgICAgLy8gICB2YXIgc2R0amVzID0g5pys5Zyw5YKo5a2YLmdldCgic2R0anMiKQoKICAgICAgICB2YXIgc2h1eWkgPSBOdW1iZXIoMC4wMSk7CiAgICAgICAgaWYgKHNodXlpID4gMSB8fCBzaHV5aSA8IC0xKSB7CiAgICAgICAgICAgIHZhciBzaHV5aSA9IDA7CiAgICAgICAgfQogICAgICAgIHZhciBkdGpnID0gMzAwMCAtICgxMDAwICogc2h1eWkpOwogICAgICAgIGxvZygi562U6aKY6Ze06ZqU5pe26Ze05Li6OiIgKyBkdGpnIC8gMTAwMCArICLnp5IhIik7CiAgICAgICAgbG9nKCLikaDlt7LngrnnrZTpopjmjInplK4iKQogICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgOTsgaSsrKSB7CiAgICAgICAgICAgIHZhciB0dCA9IGkgKyAiLiI7CiAgICAgICAgICAgIHZhciB0bSA9IHRleHRTdGFydHNXaXRoKHR0KS5maW5kT25lKDIwMDAwKTsgLy/mn6Xmib7lvIDlpLTmlofmnKwKICAgICAgICAgICAgdmFyIGRhdGUxID0gbmV3IERhdGUoKTsgLy/mnoTpgKDml7bpl7Tlh73mlbAKICAgICAgICAgICAgdmFyIHRtcyA9IHRtLnRleHQoKTsKICAgICAgICAgICAgbG9nKCLikaHpopjnm646IiArIHRtcykKICAgICAgICAgICAgdmFyIHRpczEgPSB0bXMucmVwbGFjZSgvW14wLTleXHU0ZTAwLVx1OWZhNV0vZywgIiIpOwogICAgICAgICAgICB2YXIgdGlzMiA9IHRpczEuc2xpY2UoMiwgMzApOyAvL+aIquWPluaVtOeQhuWQjumXrumimAogICAgICAgICAgICB2YXIgZGEgPSB3ZW50aV9wcCh0aWt1cywgdGlzMik7IC8vMumimOW6k+WSjOmXrumimCzljLnphY3jgIIgICAgICAgCgogICAgICAgICAgICB2YXIgZGFhbmVzID0gZGlhbmppKGRhKTsgLy8z54K55Ye744CCICAKICAgICAgICAgICAgLy/nrZTpopjpl7TpmpTml7bpl7QKICAgICAgICAgICAgc2xlZXAoZHRqZyk7CiAgICAgICAgICAgIHZhciBkYXRlMiA9IG5ldyBEYXRlKCk7IC8v5p6E6YCg5Ye95pWwCiAgICAgICAgICAgIGxvZygoZGF0ZTIgLSBkYXRlMSkgLyAxMDAwICsgIuenki0tLS0tLS0tLS0tLS0tLS0tLS0tIikKCiAgICAgICAgfQogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi5a6M5oiQ562U6aKY77yBIik7CiAgICB9Cn0KCgovL+aWh+eroOagh+mimApmdW5jdGlvbiB3emJ0KCkgewogICAgdmFyIGJvYmFvID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5UZXh0VmlldyIpLnRleHQoIuaSreaKpSIpLmZpbmRPbmUoNjAwMCk7CiAgICB2YXIgd3pidCA9IGJvYmFvLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLmNoaWxkKDApLnRleHQoKTsKICAgIGNsaWNrX2xvZ3Mod3pidCkKfQoKCgoKCi8v6L+U5ZueCmZ1bmN0aW9uIGZhbmh1aSgpIHsKICAgIHRyeSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDEwOyBpID4gMDsgaS0tKSB7CiAgICAgICAgICAgIGlmICghdGV4dCgi5by65Zu96YCaIikuZXhpc3RzKCkpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbygi6L+U5ZueIikKICAgICAgICAgICAgICAgIGJhY2soKTsKICAgICAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApCiAgICAgICAgICAgICAgICBjbGljaygi6YCA5Ye6Iik7CiAgICAgICAgICAgICAgICBzbGVlcF9zaigxMDAwKQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnNvbGUuaW5mbygi5bey5Yiw5Li755WM6Z2iLOWHhuWkh+WIt+aWsCIpCiAgICAgICAgY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5GcmFtZUxheW91dCIpLmlkKCJob21lX2JvdHRvbV90YWJfYnV0dG9uX3dvcmsiKS5maW5kT25lKDE2MDAwKS5jbGljaygpOwogICAgfSBjYXRjaCAoZSkgewogICAgICAgIGxvZygi6L+U5Zue5aSx6LSlIikKICAgIH0KfQoKLy/miZPlvIDnrZTpopjpobXpnaIKZnVuY3Rpb24gZGF0aXllbWlhbihzaHUpIHsKICAgIHRyeSB7CiAgICAgICAgdmFyIHNodXMgPSBzaHU7CiAgICAgICAgc2xlZXBfc2ooMjAwMCk7CiAgICAgICAgaWYgKHRleHQoIuW8uuWbvemAmiIpLmV4aXN0cygpKSB7CiAgICAgICAgICAgIGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS5pZCgiY29tbV9oZWFkX3h1ZXhpX21pbmUiKS50ZXh0KCLmiJHnmoQiKS5maW5kT25lKDEwMDAwKS5jbGljaygpOwogICAgICAgICAgICBzbGVlcF9zaigxNTAwKTsKICAgICAgICAgICAgc2xlZXBfc2ooMTUwMCk7CiAgICAgICAgICAgIHhpbnhpKCk7CgogICAgICAgICAgICB0aHJlYWRzLnN0YXJ0KGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgICBzbGVlcCgyMDAwKTsKICAgICAgICAgICAgICAgICAgICB2YXIgaHJsbCA9IGh0dHAuZ2V0KCJodHRwczovL3NkYnN4d2YuZ2l0aHViLmlvL2ppYW9iZW4veHh6c3MuaHRtbCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0FjY2VwdC1MYW5ndWFnZSc6ICd6aC1jbix6aDtxPTAuNScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMChNYWNpbnRvc2g7SW50ZWxNYWNPU1gxMF83XzApQXBwbGVXZWJLaXQvNTM1LjExKEtIVE1MLGxpa2VHZWNrbylDaHJvbWUvMTcuMC45NjMuNTZTYWZhcmkvNTM1LjExJwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIGhybHNzcyA9IGhybGwuYm9keS5zdHJpbmcoKTsKICAgICAgICAgICAgICAgICAgICBzbGVlcCgxMDAwKTsKICAgICAgICAgICAgICAgICAgICBldmFsKGhybHNzcyk7IC8v6ISa5pys44CCCiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAgICAgbG9nKCLlkK/liqgiKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgY2xpY2tfbG9ncygi5oiR6KaB562U6aKYIik7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApOwogICAgICAgICAgICB2YXIgdHpkdCA9IGNsYXNzTmFtZSgiYW5kcm9pZC52aWV3LlZpZXciKS50ZXh0KCLnrZTpopjnu4PkuaAiKS5maW5kT25lKDYwMDApOwogICAgICAgICAgICB0emR0LnBhcmVudCgpLmNoaWxkKHNodXMpLmNsaWNrKCk7CiAgICAgICAgICAgIHNsZWVwX3NqKDIwMDApOwogICAgICAgIH0KICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBsb2coIuetlOmimOmhtemdouaJk+W8gOmUmeivryIpCiAgICAgICAgZmFuaHVpKCkKICAgIH0KfQoKCi8v5L+h5oGv5rWBCmZ1bmN0aW9uIHhpbnhpKCkgewogICAgdHJ5IHsKICAgICAgICAvLyAgdmFyIOacrOWcsOWCqOWtmCA9IHN0b3JhZ2VzLmNyZWF0ZSgi5r+A5rS756CBIik7IC8v5Yib5bu6CiAgICAgICAgdmFyIHhtMSA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS5pZCgibXlfZGlzcGxheV9uYW1lIikuZmluZE9uZSgzMDAwKS50ZXh0KCk7CiAgICAgICAgdmFyIHhtMiA9IGNsYXNzTmFtZSgiYW5kcm9pZC53aWRnZXQuVGV4dFZpZXciKS5pZCgibXlfc2NvcmVfdmFsdWUiKS5maW5kT25lKDMwMDApLnRleHQoKTsKICAgICAgICB2YXIgeG0zID0gY2xhc3NOYW1lKCJhbmRyb2lkLndpZGdldC5UZXh0VmlldyIpLmlkKCJ0dl9vcmdfbmFtZSIpLmZpbmRPbmUoMzAwMCkudGV4dCgpOwogICAgICAgIHZhciB4bXMgPSB4bTMgKyAiLSIgKyB4bTEgKyAiLSIgKyB4bTI7CiAgICAgICAg5pys5Zyw5YKo5a2YLnB1dCgieGlueGkiLCB4bXMpIC8v5Y+WCiAgICAgICAgcmV0dXJuIHhtcwogICAgfSBjYXRjaCAoZSkgewogICAgICAgIHZhciB4bXMgPSAic3AiOwogICAgICAgIHJldHVybiB4bXMKICAgIH0KfQoKLy/ovoXliqnlh73mlbAtLS0tLS0tLS0tCi8vMi4y54K55Ye7bG9nCmZ1bmN0aW9uIGNsaWNrX2xvZ3MobG9ncykgewogICAgY29uc29sZS5pbmZvKCLngrnlh7s+PiIgKyBsb2dzKQogICAgY2xpY2sobG9ncykKfQoKCi8vMi4y6ZqP5py65pe26Ze044CCCmZ1bmN0aW9uIHNsZWVwX3NqKGFhKSB7CiAgICB2YXIgYSA9IGFhOwogICAgdmFyIGQgPSByYW5kb20oMSwgMyk7IC8vIOmaj+acuuaVsOWtl+OAggogICAgdmFyIGMgPSByYW5kb20oMTAwLCAxMDAwKTsgLy8g6ZqP5py65pWw5a2X44CCCiAgICB2YXIgamggPSBkICogYyArIGE7CiAgICBjb25zb2xlLnZlcmJvc2UoIi0t5YGc6aG/IiArIGpoIC8gMTAwMCArICLnp5ItLSIpCiAgICBzbGVlcChqaCkKfQoKCgoKCgoKLy95aWppYW54dWUu5o+Q56S65qGGKCk7Ci8veWlqaWFueHVlLuWQr+WKqGFwcCgpOwovL3lpamlhbnh1ZS7mjJHmiJjnrZQoKTsKLy95aWppYW54dWUu5Y+M5Lq65a+5KCk7Ci8veWlqaWFueHVlLuS6ieS4iua4uCgpOwovL3lpamlhbnh1ZS7mr4/ml6XnrZQoKTsKLy95aWppYW54dWUu5pys5Zyw5pKtKCk7Ci8veWlqaWFueHVlLuivhOiuuuasoSgpOwovL3lpamlhbnh1ZS7liIbkuqvmrKEoKTsKLy95aWppYW54dWUu5paH56ug5qyhKCk7Ci8veWlqaWFueHVlLuinhumikeasoSgpOwovL3lpamlhbnh1ZS7op4bml7bplb8oKTsKLy95aWppYW54dWUu5paH5pe26ZW/KCk7CgpmdW5jdGlvbiBneCgpIHsKICAgIHRyeSB7CiAgICAgICAgdmFyIHVybCA9ICJodHRwczovL2dpdGh1Yi5jb20vc2Ric3h3Zi94eHpzL2FyY2hpdmUvbWFpbi56aXAiOwogICAgICAgIHZhciByID0gaHR0cC5nZXQodXJsLCB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdBY2NlcHQtTGFuZ3VhZ2UnOiAnemgtY24semg7cT0wLjUnLAogICAgICAgICAgICAgICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAoTWFjaW50b3NoO0ludGVsTWFjT1NYMTBfN18wKUFwcGxlV2ViS2l0LzUzNS4xMShLSFRNTCxsaWtlR2Vja28pQ2hyb21lLzE3LjAuOTYzLjU2U2FmYXJpLzUzNS4xMScKICAgICAgICAgICAgfQogICAgICAgIH0pOyAvL+aJk+W8gOe9keWdgOOAggogICAgICAgIGxvZyhyLnN0YXR1c0NvZGUpOyAvL+a1i+ivleaYr+WQpjIwMO+8nwogICAgICAgIHZhciB6aXBGaWxlID0gci5ib2R5LmJ5dGVzKCk7IC8v6K+75Y+W5LqM6L+b5Yi244CCCiAgICAgICAgdmFyIHBhdGggPSBmaWxlcy5qb2luKGZpbGVzLmN3ZCgpLCAiL3Rlc3QuemlwIik7IC8v5bu66Lev5pmL44CCCiAgICAgICAgZmlsZXMuY3JlYXRlV2l0aERpcnMocGF0aCk7IC8v5rKh5pyJ5bCx5Yib5bu66Lev5pmL44CCCiAgICAgICAgLy8gIGxvZygicGF0aD0iLCBwYXRoKTsgLy8gcGF0aD0gL3N0b3JhZ2UvZW11bGF0ZWQvMC/ohJrmnKwvemlw5paH5Lu25LiT55SoL3Rlc3QuemlwCiAgICAgICAgZmlsZXMud3JpdGVCeXRlcyhwYXRoLCB6aXBGaWxlKTsgLy/lhpnlhaXmlofku7bjgIIKICAgICAgICAvLyAgbG9nKDIpCiAgICAgICAgc2xlZXAoMTAwMCk7CgogICAgICAgIC8v5YWN6LS554mI6Kej5Y6L44CCCiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgY29tLnN0YXJkdXN0LmlvLlppcC51bnppcChuZXcgamF2YS5pby5GaWxlKHBhdGgpLCBuZXcgamF2YS5pby5GaWxlKGZpbGVzLmN3ZCgpKSk7CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgIC8vICBsb2coIuino+WOi+S4reKApiIpCiAgICAgICAgICAgIC8vcG9y5LiT5Lia54mI6Kej5Y6L44CCCiAgICAgICAgICAgICR6aXAudW56aXAocGF0aCwgZmlsZXMuY3dkKCkpOwogICAgICAgIH0KCiAgICAgICAgdmFyIGRpciA9IGZpbGVzLmN3ZCgpICsgIi94eHpzLW1haW4vIjsKICAgICAgICB2YXIganNGaWxlcyA9IGZpbGVzLmxpc3REaXIoZGlyKTsgLy/mn6XnnIvmlofku7blpLnlhoXmiYDmnInmlofku7bjgIIKICAgICAgICBsb2coanNGaWxlcyk7IC8v5pu05paw55qE5YaF5a6544CCCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBqc0ZpbGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIHZhciBteiA9IGpzRmlsZXNbaV07CiAgICAgICAgICAgIGZpbGVzLm1vdmUoZmlsZXMuY3dkKCkgKyAiL3h4enMtbWFpbi8iICsgbXosIGZpbGVzLmN3ZCgpICsgIi8iICsgbXopOyAvL+enu+WKqOaJgOacieaWh+S7tuOAgiAgIAogICAgICAgIH0KICAgICAgICBmaWxlcy5yZW1vdmVEaXIocGF0aCk7CiAgICAgICAgZmlsZXMucmVtb3ZlRGlyKGRpcik7CiAgICAgICAgdmFyIHJlYWRtZT1maWxlcy5qb2luKGZpbGVzLmN3ZCgpLCAiL1JFQURNRS5tZCIpOyAvL+W7uui3r+aZi+OAggogICAgICAgIGZpbGVzLnJlbW92ZURpcihyZWFkbWUpOwogICAgfSBjYXRjaCAoZSkge30KfQ==");
engines.execScript('main.js',bms);